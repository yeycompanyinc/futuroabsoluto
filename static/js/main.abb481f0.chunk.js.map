{"version":3,"sources":["redux/types/auth.js","services/token.js","utils/themes/Light.js","components/hooks/UseWindowDimensions.js","utils/StyleUtils.js","components/common/layout/LayoutStyle.js","components/common/layout/RowView.js","components/common/layout/ColumnView.js","components/common/layout/PageView.js","components/common/button/ButtonStyle.js","components/common/button/Button.js","assets/images/futuroAbsolutoBlack.png","components/common/sidebar/SidebarStyles.js","components/common/sidebar/Sidebar.jsx","redux/actions/auth.js","components/common/text/TextStyle.js","components/common/text/Text.js","components/common/form/FormStyle.js","components/common/form/Form.js","components/common/input/InputStyle.js","components/common/input/Input.js","components/common/date-picker/DatePickerStyle.js","components/common/date-picker/DatePicker.js","components/common/dropdown/DropdownStyle.js","components/common/dropdown/Dropdown.js","components/common/table/Table.js","components/common/modal/Modal.js","components/common/modal/Dialog.js","pages/notFound.js","redux/reducers/auth.js","redux/types/combos.js","redux/reducers/combos.js","redux/types/workingSchedule.js","redux/reducers/workingSchedule.js","redux/types/school.js","redux/reducers/school.js","redux/reducers/dashboard.js","redux/types/company.js","redux/reducers/company.js","redux/types/user.js","redux/reducers/user.js","redux/reducers/index.js","redux/store/index.js","utils/hasAuthenticated.js","routes/defaultRoute.js","utils/Utils.js","redux/actions/report.js","pages/private/cadastro/empresa/index.js","redux/actions/combos.js","pages/private/cadastro/empresa/form.js","redux/actions/company.js","routes/private/cadastro/empresaRoutes.js","pages/private/cadastro/escola/index.js","pages/private/cadastro/escola/form.js","redux/actions/school.js","routes/private/cadastro/escolaRoutes.js","pages/private/cadastro/usuario/index.js","pages/private/cadastro/usuario/form.js","redux/actions/user.js","routes/private/cadastro/usuarioRoutes.js","utils/generateRoutePath.js","routes/groups/cadastroRoutesGroup.js","pages/private/estagio/contrato/index.js","utils/BRLCurrencyConverter.js","pages/private/estagio/contrato/novo.js","routes/private/estagio/contratoRoutes.js","routes/groups/estagioRoutesGroup.js","pages/public/login/index.js","redux/actions/dashboard.js","utils/addDaysAndFormatDate.js","pages/private/dashboard/index.js","pages/private/usuario/index.js","routes/index.js","App.js","index.js","services/api.js","redux/types/dashboard.js","utils/errorHandler.js"],"names":["PREFIX","AUTH_TYPES","LOGIN","LOGOUT","UPDATE_USERDATA","TOKEN_KEY","isValidJWT","token","RegExp","test","extractDataFromJWTToken","jwt_decoded","getToken","ls","localStorage","getItem","length","JSON","parse","setToken","setItem","stringify","colors","backgroundColor","fontColor","mainColor","purple1","purple2","purple3","white","orange","red","black","grey","lightGrey","darkGrey","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","screenHeight","screenWidth","MainView","styled","div","setSpacing","value","side","defaultValue","spacingValue","setAlignment","align","orientation","themeColors","Row","props","display","flex","flexDirection","float","minWidth","maxWidth","padding","margin","Column","overflow","textAlign","RowView","children","ColumnView","PageView","left","right","bottom","top","baseButtonStyle","css","color","size","fontWeight","borderStyle","borderWidth","borderColor","ButtonDefaultStyle","button","ButtonSubmitStyle","Button","onClickFunction","style","textProps","viewStyle","buttonProps","onClick","type","getButtonStyle","h6","Sidebar","menuCollapse","dispatch","useDispatch","history","useHistory","user","useSelector","state","auth","name","username","id","collapsed","src","logoClient2","maxHeight","paddingBottom","paddingTop","alt","iconShape","icon","to","title","clear","push","toast","success","signOut","TextStyle","p","required","LabelStyle","TitleStyle","Text","horizontal","SubmitStyle","input","attrs","label","border","fontSize","errorMessage","textoErro","console","log","Input","memo","control","mask","maskPlaceholder","labelProps","placeholder","errors","getChangeValue","validate","disabled","transform","changeValue","InputComponent","onChange","onBlur","ref","checked","setChecked","onChangeHandler","useCallback","newValue","newValueHandler","target","vertical","onChangeValue","keyValue","pl","colorScheme","isChecked","isReadOnly","rules","render","field","DataArray","register","DatePicker","DatePickerComponent","readOnlyHandler","parseISO","Dropdown","multiSelect","values","closeMenuOnSelect","DropdownComponent","inputRef","selectedValues","Array","isArray","find","c","Submit","Form","onFormSubmit","useForm","handleSubmit","watch","formState","subComponents","React","Children","map","child","index","formControl","isNaN","toString","output","e","parseInt","onSubmitHandler","sentData","onSubmit","component","InputMaskStyle","maskOptions","datePicker","alwaysShowMask","beforeChange","maskHandler","maskPlaceholderHandler","isPasswordHidden","setIsPasswordHidden","toLowerCase","preventMinus","code","preventDefault","handleClickShowPassword","handleMouseDownPassword","changeValueHandler","maskChar","inputProps","key","onKeyPress","readOnly","endAdornment","InputAdornment","position","IconButton","onMouseDown","tabIndex","registerLocale","pt","onSelect","locale","dateFormat","years","setYears","selectHandler","yearsArray","Date","getFullYear","i","months","selected","customInput","fixedHeight","renderCustomHeader","date","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","justifyContent","getMonth","indexOf","option","menuPortalTarget","menuPosition","maxMenuHeight","options","isMulti","menuPlacement","styles","provided","isSelected","defaultControlValues","singleValue","menu","zIndex","isDisabled","Table","data","columns","rowStyle","onReady","handle","defaultFilterValues","defaultLimit","defaultSortInfo","sortable","limit","getValue","editable","pagination","onLimitChange","renderRowContextMenu","showColumnMenuTool","showEmptyRows","onEditComplete","columnsHandler","setColumnsHandler","columnsArray","columnValue","filterType","filterEditor","CheckBox","DateFilter","SelectFilter","NumberFilter","emptyText","ReactDataGrid","defaultProps","i18n","Object","assign","sortAsc","sortDesc","clearAll","inlist","inrange","notinrange","notinlist","eq","neq","gt","gte","lt","lte","disable","enable","after","afterOrOn","empty","notEmpty","startsWith","endsWith","loadingText","filterTypes","string","emptyValue","operators","fn","filterValue","flexGrow","idProperty","minHeight","dataSource","defaultFilterValue","showCellBorders","minRowHeight","rowHeight","pageSizes","columnUserSelect","makeStyles","theme","paper","palette","background","boxShadow","shadows","spacing","DialogTitle","withStyles","root","closeButton","classes","onClose","other","disableTypography","className","Typography","variant","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","isVisible","setIsVisible","text","buttonText","secondaryButtonText","secondaryButtonOnClick","secondaryButton","open","setOpen","handleClose","Dialog","dividers","gutterBottom","alignItems","NotFound","marginTop","INITIAL_STATE","roleId","COMBO_TYPES","LOAD_ALL","LOAD_CITIES_FROM_STATE","companiesList","schoolsList","statesList","revocationReasonsList","citiesList","insuranceData","holder","policyCode","WORKING_SCHEDULE_TYPES","ADD_WORKLOAD","weekDays","weekdayId","hours","minWorkload","maxWorkload","SCHOOL_TYPES","CREATE_SCHOOL","UPDATE_SCHOOL","GET_SCHOOL","CLEAR","zipcode","street","number","complement","district","stateId","cityId","isActive","createdAt","updatedAt","contracts","active","awaitingSignature","closeExpire","COMPANY_TYPES","CREATE","UPDATE","GET_BY_ID","companyName","tradeName","cnpj","ie","parentCompanyId","defaultSupervisor","USER_TYPES","UPDATE_USER","CREATE_USER","LOAD_USER","email","combineReducers","action","userData","combos","workingSchedule","w","Number","weekDayId","workLoadValue","school","dashboard","DASHBOARD_TYPES","COUNT","company","store","createStore","reducers","applyMiddleware","thunkMiddleware","hasAuthenticated","DefaultRoute","isPrivate","redirectURI","isLogin","Component","rest","statusLOV","acceptedValues","isActiveLOV","queryParamsConstructor","skip","sortInfo","groupBy","queryParams","page","pageSize","forEach","filterElement","toLocaleDateString","formatAndDownloadFile","response","docId","filename","url","URL","createObjectURL","a","document","createElement","href","download","click","remove","setTimeout","revokeObjectURL","downloadContractTerminationTerm","contractId","toastId","loading","api","post","reportName","params","responseType","then","catch","err","error","errorHandler","finally","dismiss","downloadContractDismissalLetter","Empresa","operator","newFilterValue","setNewFilterValue","setLimit","get","totalCount","total","companies","count","companyActiveRender","ActionComponent","isMenuVisible","setIsMenuVisible","event","currentTarget","Menu","anchorEl","keepMounted","Boolean","MenuItem","companyId","header","defaultWidth","defaultVisible","defaultFlex","filterEditorProps","onFilterValueChange","loadAllCombos","loadCitiesFromState","EmpresaForm","reset","setValue","companyData","useParams","switchActive","setSwitchActive","entries","getCitiesByStateId","selectCity","city","selectParentCompany","parentCompany","getCepChange","cep","put","redirectOnSuccess","createCompany","Grid","container","direction","justify","item","xl","lg","md","sm","xs","filter","FormControlLabel","borderRadius","labelPlacement","Switch","evt","EmpresaRoutes","PARENT_PATH","match","exact","path","Escola","schools","schoolActiveRender","EscolaForm","schoolData","schoolId","createSchool","EscolaRoutes","Usuario","users","userActiveRender","userRoleRender","UsuarioForm","password","useRef","userId","patch","updateUserOther","current","passwordMatch","v","UsuarioRoutes","generateRoutePath","pathStringArray","objectPath","str","split","CadastroRoutesGroup","routes","empresa","escola","usuario","Contrato","location","useLocation","defaultEndDateValue","defaultStatusValue","gridRef","setGridRef","isEvaluationDialogVisible","setIsEvaluationDialogVisible","isRevocationDialogVisible","setIsRevocationDialogVisible","isStatusDialogVisible","setIsStatusDialogVisible","selectedContractId","selectedContractValue","status","wage","toLocaleString","minimumFractionDigits","startDate","endDate","revokedStatusMenu","pathname","StatusDropdownComponent","rowIndex","columnIndex","selectedStatus","setSelectedStatus","statusData","setStatusData","refMainView","selectedStatusObject","element","statusDataArray","acceptedStatusValue","foundStatus","bodyRef","onChangeStatus","body","EvaluationDialog","avaliationInputText","setAvaliationInputText","getInputValue","referencePeriod","period","statusChangeHandler","revocationReason","revokedFlag","queryConfig","revocationReasonId","setItemAt","RevocationDialog","setRevocationReason","StatusChangeConfirmationDialog","BRLCurrencyConverter","replace","strSplit","substring","division","ContratoNovo","getValues","editFlag","setEditFlag","readOnlyFlag","setReadOnlyFlag","weekDay1","weekDay2","weekDay3","weekDay4","weekDay5","weekDay6","weekDay7","totalHoursCount","formDataArray","policyNumber","supervisorName","customer","cpfcnpj","rgie","birthDate","insuranceCompany","totalHoursCountHandler","countHandler","acc","parseFloat","weekdayName","reduce","fetchData","keys","getHourChange","payload","cpf","rg","lessThanValid","moreThanValid","ContratoRoutes","ContratoForm","EstagioRoutesGroup","contratos","Login","FuturoAbsolutoLogoBlack","signIn","require","default","addDaysAndFormatDate","dateAdded","setDate","getDate","DashboardChart","chartSeries","setChartSeries","chart","offsetX","labels","responsive","breakpoint","legend","markers","offsetY","horizontalAlign","series","Dashboard","Card","CardContent","passwordConf","updateUser","PrivateRoutesGroup","cadastro","estagio","PublicRoutesGroup","login","Routes","createBrowserHistory","setupInterceptors","App","t","message","ReactDOM","StrictMode","getElementById","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","timeout","timeoutErrorMessage","Promise","reject","expired","errorObj","unhandledCode","httpCode","details"],"mappings":"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","file":"static/js/main.abb481f0.chunk.js","sourcesContent":["const PREFIX = \"AUTH\"\r\nconst AUTH_TYPES = {\r\n  LOGIN: `${PREFIX}/LOGIN`,\r\n  LOGOUT: `${PREFIX}/LOGOUT`,\r\n  UPDATE_USERDATA: `${PREFIX}/UPDATE_USERDATA`\r\n}\r\n\r\nexport default AUTH_TYPES","import jwt_decoded from \"jwt-decode\"\r\nconst TOKEN_KEY = \"@YEY_CONTRACTS_APP_KEY\"\r\n\r\nconst isValidJWT = token => RegExp(/^([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_=]+)\\.([a-zA-Z0-9_\\-+/=]*)/).test(token)\r\n\r\nconst extractDataFromJWTToken = token => {\r\n  if(isValidJWT(token)) {\r\n    return jwt_decoded(token)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getToken = () => {\r\n  const ls = localStorage.getItem(TOKEN_KEY)\r\n  if(ls && ls.length > 0) {\r\n    return JSON.parse(ls)\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nconst setToken = token => localStorage.setItem(TOKEN_KEY, JSON.stringify(token))\r\n\r\nexport {getToken, setToken, isValidJWT, extractDataFromJWTToken}","const colors = {\r\n    // Cores utilizadas no tema do produto\r\n    backgroundColor: '#FFFFFF', //#E3E3E3\r\n    fontColor: '#000000',\r\n    mainColor: '',\r\n\r\n    purple1: '#3CF361',\r\n    purple2: '#52307c',\r\n    purple3: '#351D4D',\r\n\r\n    // Cores utilizadas para manter a padronizacao da palheta de cores do produto como um todo\r\n    white: '#FFFFFF',\r\n    orange: '#FF0000',\r\n    red:  '#D00000', //'#B10202',\r\n    black: '#000000',\r\n    grey: '#888888',\r\n    lightGrey: '#BBBBBB', //#c9cbce\r\n    darkGrey: '#1D1D1D',//'#333333'\r\n}\r\n\r\nexport default colors\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import styled from 'styled-components'\r\nimport themeColors from './themes/Light'\r\nimport getWindowDimensions from 'components/hooks/UseWindowDimensions'\r\n\r\nconst { screenHeight, screenWidth } = getWindowDimensions\r\n\r\nexport const MainView = styled.div`\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    ${'' /* overflow: 'auto'; */}\r\n    font-family: 'Helvetica';\r\n`\r\n\r\nexport const handleHeight = (value) => {\r\n\r\n    switch (typeof value) {\r\n        case 'number':\r\n            if (value > 1) {\r\n                return value\r\n            }\r\n            else {\r\n                const newHeight = screenHeight * value\r\n                return newHeight\r\n            }\r\n\r\n        case 'string':\r\n            const stringValue = value.split('px')\r\n            if (stringValue[1] === '') {\r\n                return parseInt(stringValue[0])\r\n            } else {\r\n                return value\r\n            }\r\n\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const handleWidth = (value) => {\r\n\r\n    switch (typeof value) {\r\n        case 'number':\r\n            if (value > 1) {\r\n                return value\r\n            }\r\n            else {\r\n                const newWidth = screenWidth * value\r\n                return newWidth\r\n            }\r\n\r\n        case 'string':\r\n            const stringValue = value.split('px')\r\n            if (stringValue[1] === '') {\r\n                return parseInt(stringValue[0])\r\n            } else {\r\n                return value\r\n            }\r\n\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const convertToNumber = (value) => {\r\n    switch (typeof value) {\r\n        case 'number':\r\n            return value\r\n\r\n        case 'string':\r\n            const numberString = value.split('%')\r\n            let number = value\r\n\r\n            if (value.includes('%')) {\r\n                number = numberString[0] / 100\r\n            }\r\n\r\n            return Number(number)\r\n\r\n        default:\r\n            return 0\r\n    }\r\n}\r\n\r\nexport const convertToPercentage = (value) => {\r\n    switch (typeof value) {\r\n        case 'number':\r\n            return `${value * 100}%`\r\n\r\n        case 'string':\r\n            return value\r\n\r\n        default:\r\n            return '0%'\r\n    }\r\n}\r\n\r\n// Utilizado para margin e padding\r\n// value: 'margin' ou 'padding'\r\n// side: 'top', 'bottom', 'left', 'right'\r\n// Exemplo:\r\n// marginTop: (typeof margin === 'number' || typeof margin === 'string')\r\n// \t? `$height * ${convertToNumber(margin)}`\r\n// \t: ((margin && margin.top) && `$height * ${convertToNumber(margin.top)}`),\r\nexport const setSpacing = (value, side, height = screenHeight, defaultValue = 0) => {\r\n    const { screenWidth } = getWindowDimensions\r\n\r\n    switch (typeof value) {\r\n        case 'number':\r\n            return value\r\n\r\n        case 'string':\r\n            return value // height * convertToNumber(value)\r\n\r\n        case 'object':\r\n            let spacingValue = 0\r\n            switch (side) {\r\n                case 'top':\r\n                    if (value && typeof value[side] === 'string') {\r\n                        spacingValue = value[side]\r\n                        // const stringVerticalValue = value[side].split('px')\r\n                        // console.log('value[side]: ', value[side], stringVerticalValue)\r\n                        // if (stringVerticalValue[1] === '' && !isNaN(stringVerticalValue[0])) {\r\n                        // \tspacingValue = parseInt(stringVerticalValue[0])\r\n                        // } else {\r\n                        // \tspacingValue = height * convertToNumber(value[side])\r\n                        // }\r\n                    }\r\n                    break\r\n                case 'bottom':\r\n                    if (value && typeof value[side] === 'string') {\r\n                        spacingValue = value[side]\r\n                    }\r\n                    break\r\n\r\n                case 'left':\r\n                    if (typeof value[side] === 'string') {\r\n                        spacingValue = value[side]\r\n                    }\r\n                    break\r\n                case 'right':\r\n                    if (typeof value[side] === 'string') {\r\n                        spacingValue = value[side]\r\n                    }\r\n                    break\r\n\r\n                default:\r\n                    spacingValue = 0\r\n                    break\r\n            }\r\n            return spacingValue\r\n\r\n        default:\r\n            return defaultValue\r\n    }\r\n}\r\n\r\n// Utilizado para alinhar o componente em relação a View pai\r\n// align: 'margin' ou 'padding'\r\n// orientation: 'horizontal' ou 'vertical'\r\nexport const setAlignment = (align, orientation, defaultValue = 'flex-start') => {\r\n    switch (typeof align) {\r\n        case 'string':\r\n            if (align === 'noAlign') {\r\n                return undefined\r\n            } else {\r\n                return align\r\n            }\r\n\r\n        case 'object':\r\n            return align[orientation]\r\n\r\n        default:\r\n            return defaultValue\r\n    }\r\n}\r\n\r\nexport const setBorder = (border, orientation, defaultValue = 0) => {\r\n    switch (typeof border) {\r\n        case 'string':\r\n            const stringValue = border.split('px')\r\n            if (stringValue[1] === '') {\r\n                return parseInt(stringValue[0])\r\n            } else {\r\n                return border\r\n            }\r\n\r\n        case 'object':\r\n            if (typeof border['width'] !== 'undefined') {\r\n                return border['width']\r\n            } else {\r\n                return border[orientation]\r\n            }\r\n\r\n\r\n        default:\r\n            return defaultValue\r\n    }\r\n}\r\n\r\nexport const setBorderRadius = (border, orientation, defaultValue = undefined) => {\r\n    if (typeof border !== 'undefined') {\r\n        switch (typeof border.radius) {\r\n            case 'string':\r\n            case 'number':\r\n                return border.radius\r\n\r\n            case 'object':\r\n                return border.radius[orientation]\r\n\r\n            default:\r\n                return defaultValue\r\n        }\r\n    } else {\r\n        return defaultValue\r\n    }\r\n}\r\n\r\n\r\nexport const colors = {\r\n    ...themeColors,\r\n}\r\n","import styled from \"styled-components\"\r\nimport { colors, setSpacing, setAlignment } from 'utils/StyleUtils'\r\n\r\nexport const Row = styled.div`\r\n    display:  ${props => props.display || 'flex'};\r\n    flex: ${props => props.flex && props.flex};\r\n    flex-direction: ${props => props.flexDirection || 'row'};\r\n    float: ${props => props.float && props.float};\r\n\r\n    width: ${props => props.width ? props.width : 'auto'};\r\n    min-width: ${props => props.minWidth && props.minWidth};\r\n    max-width: ${props => props.maxWidth && props.maxWidth};\r\n\r\n    height: ${props => props.height ? props.height : 'auto'};\r\n\r\n    justify-content: ${props => setAlignment(props.align, 'horizontal', 'center')};\r\n    align-items: ${props => setAlignment(props.align, 'vertical', 'flex-start')};\r\n\r\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : 'transparent'};\r\n\r\n    padding-top: ${props => setSpacing(props.padding, 'top')};\r\n    padding-bottom: ${props => setSpacing(props.padding, 'bottom')};\r\n    padding-left: ${props => setSpacing(props.padding, 'left')};\r\n    padding-right: ${props => setSpacing(props.padding, 'right')};\r\n\r\n    margin-top: ${props => setSpacing(props.margin, 'top')};\r\n    margin-bottom: ${props => setSpacing(props.margin, 'bottom')};\r\n    margin-left: ${props => setSpacing(props.margin, 'left')};\r\n    margin-right: ${props => setSpacing(props.margin, 'right')};\r\n\r\n`\r\n\r\nexport const Column = styled.div`\r\n    ${'' /* display:  ${props => props.display ? props.display : 'flex'}; */}\r\n    flex-direction: ${props => props.flexDirection || 'column'};\r\n    flex: ${props => props.flex && props.flex};\r\n    float: ${props => props.float && props.float};\r\n    overflow: ${props => props.overflow ? props.overflow : 'none'};\r\n\r\n    width: ${props => props.width ? props.width : 'auto'};\r\n    min-width: ${props => props.minWidth && props.minWidth};\r\n    max-width: ${props => props.maxWidth && props.maxWidth};\r\n\r\n    ${'' /* min-height: 1px; */}\r\n    height: ${props => props.height ? props.height : 'auto'};\r\n\r\n    text-align: ${props => props.textAlign ? props.textAlign : 'left'};\r\n    justify-content: ${props => setAlignment(props.align, 'vertical', 'center')};\r\n    align-items: ${props => setAlignment(props.align, 'horizontal', 'flex-start')};\r\n\r\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : 'transparent'};\r\n\r\n    padding-top: ${props => setSpacing(props.padding, 'top')};\r\n    padding-bottom: ${props => setSpacing(props.padding, 'bottom')};\r\n    padding-left: ${props => setSpacing(props.padding, 'left')};\r\n    padding-right: ${props => setSpacing(props.padding, 'right')};\r\n\r\n    margin-top: ${props => setSpacing(props.margin, 'top')};\r\n    margin-bottom: ${props => setSpacing(props.margin, 'bottom')};\r\n    margin-left: ${props => setSpacing(props.margin, 'left')};\r\n    margin-right: ${props => setSpacing(props.margin, 'right')};\r\n\r\n    ${'' /* box-sizing: border-box;\r\n    &:before,\r\n    &:after {\r\n        content: '';\r\n        display: table;\r\n    }\r\n    &:after {\r\n        clear: both;\r\n    } */}\r\n`\r\n","import React from 'react'\r\nimport { Row } from \"./LayoutStyle.js\"\r\n\r\nconst RowView = (props) => {\r\n    const { children } = props\r\n\r\n    return(\r\n        <Row {...props}>\r\n            {children}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default RowView\r\n","import React from 'react'\nimport { Column } from \"./LayoutStyle.js\"\n\nconst ColumnView = (props) => {\n    const { children } = props\n\n    return(\n        <Column {...props}>\n            {children}\n        </Column>\n    )\n}\n\nexport default ColumnView\n","import React from 'react'\nimport { Column } from \"./LayoutStyle.js\"\n\nconst PageView = (props) => {\n    const { children } = props\n\n    return (\n        <Column height='100vh' display='block' padding={{ left: '4em', right: '4em', bottom: '2em', top: '2em' }} overflow='auto' {...props}>\n            {children}\n        </Column>\n    )\n}\n\nexport default PageView\n","import styled, { css } from \"styled-components\"\r\nimport { colors, setSpacing } from 'utils/StyleUtils'\r\n\r\nconst baseButtonStyle = css`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.05em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n\r\n    border-style: ${props => props.borderStyle ? props.borderStyle : 'solid'};\r\n    border-width: ${props => props.borderWidth ? props.borderWidth : '1px'};\r\n    border-color: ${props => props.borderColor ? props.borderColor : colors.grey};\r\n\r\n    margin-top: ${props => setSpacing(props.margin, 'top')};\r\n    margin-bottom: ${props => setSpacing(props.margin, 'bottom')};\r\n    margin-left: ${props => setSpacing(props.margin, 'left')};\r\n    margin-right: ${props => setSpacing(props.margin, 'right')};\r\n\r\n    padding-top: ${props => setSpacing(props.padding, 'top')};\r\n    padding-bottom: ${props => setSpacing(props.padding, 'bottom')};\r\n    padding-left: ${props => setSpacing(props.padding, 'left')};\r\n    padding-right: ${props => setSpacing(props.padding, 'right')};\r\n\r\n    display:  ${props => props.display || 'flex'};\r\n    flex: ${props => props.flex && props.flex};\r\n    float: ${props => props.float && props.float};\r\n\r\n    width: ${props => props.width ? props.width : 'auto'};\r\n    height: ${props => props.height ? props.height : 'auto'};\r\n`\r\nconst ButtonDefaultStyle = styled.button`\r\n    ${baseButtonStyle}\r\n`\r\n\r\nconst ButtonSubmitStyle = styled.button`\r\n    ${baseButtonStyle}\r\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : colors.darkGrey};\r\n    color: ${props => props.fontColor ? props.fontColor : colors.white};\r\n    \r\n    ${'' /* &:focus {\r\n        outline: none;\r\n        box-shadow: 1px 1px 1px 1px ${colors.darkGrey};\r\n    }\r\n    &:active {\r\n        color: ${colors.darkGrey};\r\n        background-color: ${colors.white};\r\n    } */}\r\n`\r\n\r\nexport { ButtonDefaultStyle, ButtonSubmitStyle }\r\n","import React, { useCallback } from 'react'\r\nimport { Row, Col, Text } from 'components/YeyComponents'\r\nimport { ButtonDefaultStyle, ButtonSubmitStyle } from './ButtonStyle'\r\nimport { colors, setSpacing } from 'utils/StyleUtils'\r\n\r\nconst Button = (props) => {\r\n    const { children, onClickFunction, style, textProps, viewStyle } = props\r\n\r\n    const onClickHandler = () => {\r\n        onClickFunction && typeof onClickFunction == 'function' && onClickFunction()\r\n    }\r\n\r\n    const buttonProps = {\r\n        onClick: onClickHandler,\r\n        type: 'button',\r\n        borderStyle: props?.borderStyle,\r\n        margin: { top: '0.5em' },\r\n        padding: { top: '0.5em', bottom: '0.5em', left: '1em', right: '1em' }\r\n    }\r\n\r\n    const getButtonStyle = () => {\r\n        switch (style) {\r\n            case 'submit':\r\n                return <ButtonSubmitStyle\r\n                    {...buttonProps}\r\n                >\r\n                    <Text color={colors.white} {...textProps}>\r\n                        {children || 'Enviar'}\r\n                    </Text>\r\n                </ButtonSubmitStyle>\r\n\r\n            default:\r\n                return <ButtonDefaultStyle\r\n                    {...buttonProps}\r\n                >\r\n                    <Text {...textProps}>\r\n                        {children || 'Enviar'}\r\n                    </Text>\r\n                </ButtonDefaultStyle>\r\n        }\r\n    }\r\n\r\n    return <Row {...viewStyle} >\r\n        {getButtonStyle()}\r\n    </Row>\r\n}\r\n\r\nexport default Button\r\n","export default __webpack_public_path__ + \"static/media/futuroAbsolutoBlack.8b3f4514.png\";","import styled from 'styled-components'\r\n\r\nexport const Title = styled.h6`\r\n    color: #f00;\r\n`\r\n","//import useState hook to create menu collapse state\r\nimport React, { useState } from \"react\"\r\n\r\n//import react pro sidebar components\r\nimport {\r\n    ProSidebar,\r\n    Menu,\r\n    MenuItem,\r\n    SidebarHeader,\r\n    SidebarFooter,\r\n    SidebarContent,\r\n    SubMenu,\r\n} from \"react-pro-sidebar\"\r\n\r\n//import icons from react icons\r\nimport { AiFillHome, AiFillFileText, AiOutlineMenu, AiOutlineClose, AiFillFolderAdd } from \"react-icons/ai\"\r\nimport { FaUserAlt } from \"react-icons/fa\"\r\nimport { FiLogOut } from \"react-icons/fi\"\r\nimport { MdDashboard } from \"react-icons/md\"\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport logoClient2 from 'assets/images/futuroAbsolutoBlack.png'\r\n\r\n//import sidebar css from react-pro-sidebar module and our custom css\r\nimport \"react-pro-sidebar/dist/css/styles.css\"\r\nimport \"./Sidebar.css\"\r\nimport { Title } from './SidebarStyles'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { signOut } from \"redux/actions/auth\"\r\n\r\nconst Sidebar = () => {\r\n\r\n    //create initial menuCollapse state using useState hook\r\n    const [menuCollapse, setMenuCollapse] = useState(false)\r\n\r\n    //create a custom function that will change menucollapse state from false to true and true to false\r\n    const menuIconClick = () => {\r\n        //condition checking to change state from true to false and vice versa\r\n        menuCollapse ? setMenuCollapse(false) : setMenuCollapse(true)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const user = useSelector(state => state.auth.name || state.auth.username)\r\n    const logout = () => dispatch(signOut(history))\r\n\r\n    return (\r\n        <>\r\n            <div id=\"header\">\r\n                <ProSidebar collapsed={menuCollapse}>\r\n                    <SidebarHeader>\r\n                        {/* <Title>\r\n                            YEY CONTRACTS Powered By Yey Company\r\n                        </Title> */}\r\n                    </SidebarHeader>\r\n                    <SidebarHeader>\r\n                        {/* <div className=\"logotext\" >\r\n                            <div className=\"closeicon\">{menuCollapse ? \"Logo\" : \"Logo\"}</div>\r\n                        </div> */}\r\n                        <img src={logoClient2} style={{ maxHeight: '100%', maxWidth: '100%', paddingBottom: '10px', paddingTop: '10px' }} alt='best logo in humankind' />\r\n                    </SidebarHeader>\r\n                    <SidebarContent>\r\n                        <Menu iconShape=\"square\">\r\n                            <MenuItem icon={<MdDashboard size={15} />}>\r\n                                Dashboard\r\n                                <Link to=\"/menu/dashboard\" />\r\n                            </MenuItem>\r\n                            <SubMenu title=\"Contratos\" icon={<AiFillFileText size={15} />}>\r\n                                <MenuItem>\r\n                                    Novo\r\n                                    <Link to=\"/menu/estagio/contratos/novo\" />\r\n                                </MenuItem>\r\n                                <MenuItem>\r\n                                    Listar\r\n                                    <Link to=\"/menu/estagio/contratos\" />\r\n                                </MenuItem>\r\n                            </SubMenu>\r\n                            <SubMenu title=\"Cadastros\" icon={<AiFillFolderAdd size={15} />}>\r\n                                <MenuItem>\r\n                                    Usuário\r\n                                    <Link to=\"/menu/cadastro/usuario\" />\r\n                                </MenuItem>\r\n                                <MenuItem>\r\n                                    Empresa\r\n                                    <Link to=\"/menu/cadastro/empresa\" />\r\n                                </MenuItem>\r\n                                <MenuItem>\r\n                                    Escola\r\n                                    <Link to=\"/menu/cadastro/escola\" />\r\n                                </MenuItem>\r\n                            </SubMenu>\r\n                        </Menu>\r\n                    </SidebarContent>\r\n                    <SidebarFooter>\r\n                        <Menu iconShape=\"square\">\r\n                            {/* <MenuItem\r\n                                onClick={menuIconClick}\r\n                                icon={\r\n                                    menuCollapse\r\n                                        ?\r\n                                        <AiOutlineMenu size={15} />\r\n                                        :\r\n                                        <AiOutlineClose size={15} />\r\n                                }\r\n                            >\r\n                                Minimizar Aba\r\n                            </MenuItem> */}\r\n                            <MenuItem icon={<FaUserAlt size={15} />}>\r\n                                <span>{user}</span>\r\n                                <Link to=\"/menu/usuario\" />\r\n                            </MenuItem>\r\n                            <MenuItem icon={<FiLogOut size={15} />} onClick={logout}>\r\n                                Sair\r\n                            </MenuItem>\r\n                        </Menu>\r\n                    </SidebarFooter>\r\n                </ProSidebar>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import toast from 'react-hot-toast'\nimport AUTH_TYPES from 'redux/types/auth'\nimport api from 'services/api'\nimport { setToken, extractDataFromJWTToken } from 'services/token'\nimport errorHandler from 'utils/errorHandler'\n\nconst signIn = (username, password, history) => {\n  return dispatch => {\n    let toastId = toast.loading(`Fazendo login... `)\n    api.post(\"login\", {username, password}).then(response => {\n      setToken(response.data.token)\n      dispatch({\n        type: AUTH_TYPES.LOGIN,\n        data: extractDataFromJWTToken(response.data.token)\n      })\n      history.push(\"/menu/dashboard\")\n      toast.success(`Login realizado com sucesso. `)\n    }).catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst signOut = history => {\n  return dispatch => {\n    dispatch({type: AUTH_TYPES.LOGOUT})\n    localStorage.clear()\n    history.push(\"/login\")\n    toast.success(`Logout realizado com sucesso. `)\n  }\n}\n\nexport {signIn, signOut}\n","import styled from \"styled-components\"\r\nimport { colors } from 'utils/StyleUtils'\r\n\r\nconst TextStyle = styled.p`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n    flex-shrink: 1;\r\n\r\n    &:after {\r\n        content: ${props => props.required && \"' *'\"};\r\n        color: ${props => props.required && colors.red};\r\n    }\r\n`\r\n\r\nconst LabelStyle = styled.p`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n    flex-shrink: 1;\r\n\r\n`\r\nconst TitleStyle = styled.p`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.8em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n    flex-shrink: 1;\r\n`\r\n\r\nexport { TextStyle, TitleStyle, LabelStyle }","/** Texto default do sistema\r\n * @param {text} children - Texto mostrado na tela.\r\n * \r\n * Styles\r\n * @param {number, string} width - Largura do texto, valor em porcentagem. Ex: 0.7 ou '60%'.\r\n * @param {number, string} height - Altura do texto, valor em porcentagem. Ex: 0.2 ou '30%'.\r\n * @param {string, object} align - Alinhamento do texto, opções: 'flex-start', 'center', 'flex-end'. Se for uma string aplicará nos dois eixos. Se for um objeto pode receber {horizontal: <string>, vertical: <string>} para aplicar dois alinhamentos distintos (default: 'flex-start').\r\n * @param {string} backgroundColor ADICIONAR - Hex da cor de fundo do texto. Ex: '#FF0066'.\r\n * @param {object} border - Recebe as propriedades: {width: <number>, color: <string>}.\r\n * @param {string, number, object} margin - Espaçamento da view do texto, exemplos: '10%', 0.3. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {string, number, object} padding - Espaçamento do texto até sua view, exemplos: '20%', 0.45. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {number} size - Tamanho da fonte do texto, se não for passado nada, o padrão retornado será 14.\r\n * @param {string} fontWeight - Aplica o estilo na fonte.\r\n * @param {string} fontFamily ADICIONAR - Aplica uma nova fonte.\r\n * @param {string} color - Hex da cor do texto (default: '#000').\r\n**/\r\n\r\nimport React from 'react'\r\nimport { TextStyle, TitleStyle, LabelStyle } from './TextStyle.js'\r\nimport { Row } from 'components/YeyComponents'\r\n\r\nconst Text = (props) => {\r\n    const { children } = props\r\n\r\n    switch (props.type) {\r\n        case 'title':\r\n            return (\r\n                <Row align={{horizontal: 'flex-start'}} {...props}>\r\n                    <TitleStyle {...props}>{children}</TitleStyle>\r\n                </Row>\r\n            )\r\n\r\n        case 'label':\r\n            return (\r\n                <Row align={{horizontal: 'flex-start'}} {...props}>\r\n                    <LabelStyle {...props}>{children}</LabelStyle>\r\n                </Row>\r\n            )\r\n\r\n        default:\r\n            return (\r\n                <Row align={{horizontal: 'flex-start'}} {...props}>\r\n                    <TextStyle {...props}>{children}</TextStyle>\r\n                </Row>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Text\r\n","import styled from \"styled-components\"\nimport { colors, setSpacing, setAlignment } from 'utils/StyleUtils'\n\nconst SubmitStyle = styled.input.attrs(props => ({\n    type: 'submit',\n    value: props.label ? props.label : 'Enviar'\n}))`\n    display:  ${props => props.display || 'flex'};\n    flex: ${props => props.flex && props.flex};\n    float: ${props => props.float && props.float};\n\n    width: ${props => props.width ? props.width : 'auto'};\n    height: ${props => props.height ? props.height : 'auto'};\n\n    padding-top: ${props => setSpacing(props.padding, 'top')};\n    padding-bottom: ${props => setSpacing(props.padding, 'bottom')};\n    padding-left: ${props => setSpacing(props.padding, 'left')};\n    padding-right: ${props => setSpacing(props.padding, 'right')};\n\n    justify-content: ${props => setAlignment(props.align, 'vertical', 'center')};\n    align-items: ${props => setAlignment(props.align, 'horizontal', 'center')};\n\n    background-color: ${props => props.backgroundColor ? props.backgroundColor : colors.darkGrey};\n    color: ${props => props.fontColor ? props.fontColor : colors.white};\n\n    margin-top: ${props => setSpacing(props.margin, 'top')};\n    margin-bottom: ${props => setSpacing(props.margin, 'bottom')};\n    margin-left: ${props => setSpacing(props.margin, 'left')};\n    margin-right: ${props => setSpacing(props.margin, 'right')};\n\n    border:${props => props.border ? props.border : 'none'};\n\n    font-size: ${props => props.fontSize ? props.fontSize : '1.2em'};\n\n    &:focus {\n        outline: none;\n        box-shadow: 1px 1px 1px 1px ${colors.darkGrey};\n    }\n    &:active {\n        color: ${colors.darkGrey};\n        background-color: ${colors.white};\n    }\n  `\n\nexport { SubmitStyle }\n","/** Texto default do sistema\r\n * @param {text} children - Texto mostrado na tela.\r\n *\r\n * Styles\r\n * @param {number, string} width - Largura do texto, valor em porcentagem. Ex: 0.7 ou '60%'.\r\n * @param {number, string} height - Altura do texto, valor em porcentagem. Ex: 0.2 ou '30%'.\r\n * @param {string, object} align - Alinhamento do texto, opções: 'flex-start', 'center', 'flex-end'. Se for uma string aplicará nos dois eixos. Se for um objeto pode receber {horizontal: <string>, vertical: <string>} para aplicar dois alinhamentos distintos (default: 'flex-start').\r\n * @param {string} backgroundColor - Hex da cor de fundo do texto. Ex: '#FF0066'.\r\n * @param {object} border - Recebe as propriedades: {width: <number>, color: <string>}.\r\n * @param {string, number, object} margin - Espaçamento da view do texto, exemplos: '10%', 0.3. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {string, number, object} padding - Espaçamento do texto até sua view, exemplos: '20%', 0.45. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {number} size - Tamanho da fonte do texto, se não for passado nada, o padrão retornado será 14.\r\n * @param {boolean} bold - Aplica a fonte 'Neris-SemiBold'.\r\n * @param {string} fontFamily - Aplica uma nova fonte.\r\n * @param {string} color - Hex da cor do texto (default: '#000').\r\n**/\r\n\r\nimport React, { memo, useMemo, useCallback, useState, useEffect } from 'react'\r\nimport { Text, Col, Row, DatePicker as YeyDatePicker, Input as YeyInput, Dropdown as YeyDropdown } from 'components/YeyComponents'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport { SubmitStyle } from './FormStyle'\r\nimport { Checkbox, CheckboxGroup } from \"@chakra-ui/react\"\r\nimport \"./Styles.css\"\r\nimport { parseISO } from 'date-fns'\r\n\r\n// Error Component\r\nconst errorMessage = ({ type }) => {\r\n    let textoErro = ''\r\n    console.log('errorMessage', type)\r\n    switch (type) {\r\n        case 'maxLength':\r\n            textoErro = 'Tamanho excedido'\r\n            break\r\n        case 'required':\r\n            textoErro = 'Campo necessário'\r\n            break\r\n        case 'moreThanValid':\r\n            textoErro = 'Horas máximas por semana excedida (30)'\r\n            break\r\n        case 'lessThanValid':\r\n            textoErro = 'Horas mínimas não alcançadas por semana (20)'\r\n            break\r\n        case 'exist':\r\n            textoErro = 'Horas mínimas não alcançadas por semana (20)'\r\n            break\r\n        case 'passwordMatch':\r\n            textoErro = 'Senhas devem ser iguais'\r\n            break\r\n        default:\r\n            textoErro = 'Valores inseridos estão incorretos'\r\n    }\r\n\r\n    return <Text size='1em' color={colors.red}>{textoErro}</Text>\r\n}\r\n\r\n// Componentes\r\nconst Input = memo((props) => {\r\n    const { name, label, control, mask, maskPlaceholder, defaultValue, placeholder, labelProps, required, errors, type, width, getChangeValue, validate, disabled, transform, changeValue } = props\r\n\r\n    const InputComponent = memo(({ onChange, onBlur, value, ref, label, required, getChangeValue, type, mask, width, name }) => {\r\n        const [checked, setChecked] = useState(false)\r\n\r\n        useEffect(() => {\r\n            if (value && value !== '' && value > 0) {\r\n                setChecked(true)\r\n            }\r\n            else {\r\n                setChecked(false)\r\n            }\r\n        }, [value])\r\n\r\n        const onChangeHandler = useCallback((newValue) => {\r\n            let newValueHandler = newValue\r\n            if (changeValue && typeof changeValue === 'function') {\r\n                newValueHandler = changeValue(newValue)\r\n            }\r\n            getChangeValue && typeof getChangeValue === 'function' && getChangeValue(newValueHandler?.target?.value, name)\r\n            onChange(newValueHandler)\r\n        }, [getChangeValue, changeValue])\r\n\r\n        if (type === 'weekDay') {\r\n            return <Col width={width || 'auto'} flex={1} maxWidth='30em' padding={{ top: '1em' }} {...props}>\r\n                {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }} >{label}</Text>}\r\n                <Row align={{ vertical: 'center' }}>\r\n                    <YeyInput\r\n                        value={value}\r\n                        onChangeValue={onChangeHandler}\r\n                        onChange={onChangeHandler}\r\n                        mask={mask}\r\n                        maskPlaceholder={maskPlaceholder}\r\n                        type='number'\r\n                        //width='100%'\r\n                        keyValue={name}\r\n                        disabled={disabled}\r\n                    />\r\n                    <Checkbox pl='1em' size='md' colorScheme=\"blue\" isChecked={checked} isReadOnly />\r\n                </Row>\r\n                {errors && errors[name] && errorMessage({ type: errors[name].type })}\r\n            </Col>\r\n        }\r\n        else {\r\n            return <Col width={width || 'auto'} flex={1} maxWidth='30em' padding={{ top: '1em' }} {...props}>\r\n                {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }}>{label}</Text>}\r\n                {/* <input\r\n                    onChange={(e) => onChange(transform.output(e))}\r\n                    value={transform.input(value)}\r\n                /> */}\r\n                <YeyInput\r\n                    value={value}\r\n                    onChange={onChangeHandler}\r\n                    mask={mask}\r\n                    // maskPlaceholder={maskPlaceholder}\r\n                    // placeholder={placeholder}\r\n                    type={type}\r\n                    keyValue={name}\r\n                    width='100%'\r\n                    disabled={disabled}\r\n                />\r\n                {errors && errors[name] && errorMessage({ type: errors[name].type })}\r\n            </Col>\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Controller\r\n            control={control}\r\n            name={name}\r\n            defaultValue={defaultValue}\r\n            rules={{ required: required, validate: validate }}\r\n            transform={transform}\r\n            render={({ field: { onChange, onBlur, value, ref } }) => {\r\n                return <InputComponent mask={mask} name={name} width={width} maskPlaceholder={maskPlaceholder} onChange={onChange} onBlur={onBlur} value={value} ref={ref} label={label} required={required} getChangeValue={getChangeValue} type={type} {...props} />\r\n            }}\r\n        />\r\n    )\r\n})\r\n\r\nconst DataArray = (props) => {\r\n    const { name, label, mask, maskPlaceholder, value, onChange, labelProps, register, required, errors, validate, } = props\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (value && value !== '' && value > 0) {\r\n            setChecked(true)\r\n        }\r\n        else {\r\n            setChecked(false)\r\n        }\r\n    }, [value])\r\n\r\n    return (\r\n        <Col padding={{ top: '1em' }} {...props}>\r\n            {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }}>{label}</Text>}\r\n            <Row align={{ vertical: 'center' }}>\r\n                <YeyInput\r\n                    value={value}\r\n                    onChangeValue={onChange}\r\n                    mask={mask}\r\n                    maskPlaceholder={maskPlaceholder}\r\n                    type='number'\r\n                    width='10em'\r\n                />\r\n                <Checkbox pl='1em' size='md' colorScheme=\"blue\" isChecked={checked} isReadOnly />\r\n            </Row>\r\n            {errors && errors[name] && errorMessage({ type: errors[name].type })}\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nconst DatePicker = (props) => {\r\n    const { name, control, defaultValue, label, labelProps, placeholder, required, errors, validate, width, disabled } = props\r\n\r\n    const DatePickerComponent = ({ onChange, onBlur, value, ref }) => {\r\n        return <Col width={width || 'auto'} flex={1} maxWidth='30em' padding={{ top: '1em' }} {...props}>\r\n            {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }}>{label}</Text>}\r\n            <YeyDatePicker\r\n                placeholder={placeholder}\r\n                onChangeValue={onChange}\r\n                value={value}\r\n                readOnlyHandler={true}\r\n                width='100%'\r\n                disabled={disabled}\r\n            />\r\n            {errors && errors[name] && errorMessage({ type: errors[name].type })}\r\n        </Col>\r\n    }\r\n\r\n    return (\r\n        <Controller\r\n            control={control}\r\n            defaultValue={defaultValue && parseISO(defaultValue)}\r\n            name={name}\r\n            rules={{ required: required, validate: validate }}\r\n            render={({ field: { onChange, onBlur, value, ref } }) => {\r\n                return <DatePickerComponent onChange={onChange} onBlur={onBlur} value={value} ref={ref} />\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nconst Dropdown = memo((props) => {\r\n    const { name, control, label, labelProps, multiSelect, values, defaultValue, closeMenuOnSelect, placeholder, required, errors, validate, getChangeValue, disabled } = props\r\n\r\n    const DropdownComponent = ({ onChange, onBlur, value, ref }) => {\r\n\r\n        const onChangeHandler = useCallback((newValue) => {\r\n            onChange(newValue?.value)\r\n            getChangeValue && typeof getChangeValue === 'function' && getChangeValue(newValue, name)\r\n        }, [onChange])\r\n\r\n        return <Col padding={{ top: '1em' }} {...props}>\r\n            {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }}>{label}</Text>}\r\n            <YeyDropdown\r\n                inputRef={ref}\r\n                values={values}\r\n                selectedValues={Array.isArray(values) && values.find(c => c.value === value)}\r\n                onChangeValue={onChangeHandler}\r\n                multiSelect={multiSelect}\r\n                closeMenuOnSelect={closeMenuOnSelect || true}\r\n                placeholder={placeholder}\r\n                disabled={disabled}\r\n            />\r\n            {errors && errors[name] && errorMessage({ type: errors[name].type })}\r\n        </Col>\r\n    }\r\n    return (\r\n        <Controller\r\n            control={control}\r\n            // defaultValue={defaultValue}\r\n            name={name}\r\n            rules={{ required: required, validate: validate }}\r\n            render={({ field: { onChange, onBlur, value, ref } }) => {\r\n                return <DropdownComponent onChange={onChange} onBlur={onBlur} value={value} ref={ref} />\r\n            }}\r\n        />\r\n    )\r\n})\r\n\r\nconst Submit = (props) => {\r\n    const { disabled, label } = props\r\n    return (\r\n        <Row {...props}>\r\n            <SubmitStyle\r\n                disabled={disabled}\r\n                label={label}\r\n                type='submit'\r\n                margin={{ top: '0.5em' }}\r\n                padding={{ top: '0.5em', bottom: '0.5em', left: '1em', right: '1em' }}\r\n                backgroundColor={disabled ? colors.lightGrey : colors.darkGrey}\r\n            />\r\n        </Row>\r\n    )\r\n}\r\n\r\nconst Form = memo((props) => {\r\n    const { children, onFormSubmit } = props\r\n\r\n    const { register, handleSubmit, control, watch, formState: { errors } } = useForm()\r\n\r\n    let subComponents = React.Children.map(children, (child, index) => {\r\n        console.log('child: ', child?.props, child?.type?.name)\r\n        const { values, multiSelect, name, label, labelProps, placeholder, required, mask, maskPlaceholder, defaultValue, type } = child?.props\r\n\r\n        switch (child?.type?.name) {\r\n            case 'Input':\r\n                return <Input\r\n                    formControl={control}\r\n                    register={register}\r\n                    placeholder={placeholder}\r\n                    name={name}\r\n                    label={label}\r\n                    errors={errors}\r\n                    required={required}\r\n                    mask={mask}\r\n                    maskPlaceholder={maskPlaceholder}\r\n                    type={type}\r\n                    transform={{\r\n                        input: (value) => {\r\n                            console.log('transform value', value)\r\n                            return isNaN(value) || value === 0 ? \"\" : value.toString()\r\n                        },\r\n                        output: (e) => {\r\n                            const output = parseInt(e.target.value, 10);\r\n                            return isNaN(output) ? 0 : output;\r\n                        }\r\n                    }}\r\n                />\r\n                break\r\n\r\n            case 'DatePicker':\r\n                return <DatePicker\r\n                    control={control}\r\n                    name={name}\r\n                    rules={{ required: required }}\r\n                    render={({ field: { onChange, onBlur, value, ref } }) => {\r\n                        // console.log('datepicker render2:', value, onChange)\r\n                        return <DatePicker\r\n                            onChange={onChange}\r\n                            value={value}\r\n                            register={register}\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            label={label}\r\n                            errors={errors}\r\n                            ref={ref}\r\n                            required={required}\r\n                        />\r\n                    }}\r\n                />\r\n                break\r\n\r\n            case 'Dropdown':\r\n                return <Controller\r\n                    control={control}\r\n                    name={name}\r\n                    rules={{ required: required }}\r\n                    render={({ field: { onChange, onBlur, value, ref } }) => (\r\n                        <Dropdown\r\n                            ref={ref}\r\n                            onChange={onChange}\r\n                            values={values}\r\n                            value={value}\r\n                            register={register}\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            label={label}\r\n                            errors={errors}\r\n                            multiSelect={multiSelect}\r\n                            required={required}\r\n                        />\r\n                    )}\r\n                />\r\n                break\r\n\r\n            case 'DataArray':\r\n                return <Col padding={{ top: '1em' }} {...child?.props}>\r\n                    {label && <Text required={required} {...labelProps} padding={{ bottom: '0.1em' }}>{label}</Text>}\r\n\r\n                    {values && Array.isArray(values) && values.length > 0 && values.map(({ name, label }) => {\r\n                        return <Controller\r\n                            control={control}\r\n                            name={name}\r\n                            rules={{ required: required }}\r\n                            render={({ field: { onChange, onBlur, value, ref } }) => {\r\n                                return <DataArray\r\n                                    onChange={onChange}\r\n                                    value={value}\r\n                                    register={register}\r\n                                    placeholder={placeholder}\r\n                                    name={name}\r\n                                    label={label}\r\n                                    errors={errors}\r\n                                    ref={ref}\r\n                                    required={required}\r\n                                />\r\n                            }}\r\n                        />\r\n                    })}\r\n                </Col>\r\n                break\r\n\r\n            case 'Submit':\r\n                return <Submit />\r\n                break\r\n\r\n            default:\r\n                return <></>\r\n                break\r\n        }\r\n        // if (child?.type?.name === key) {\r\n        //     return child\r\n        // }\r\n    })\r\n\r\n    const onSubmitHandler = useCallback((sentData) => {\r\n        console.log('onSubmitHandler', onFormSubmit)\r\n        if (onFormSubmit && typeof onFormSubmit === 'function') {\r\n            onFormSubmit(sentData)\r\n        }\r\n        else {\r\n            console.log('onSubmit function not associated', sentData)\r\n        }\r\n    }, [onFormSubmit])\r\n\r\n    return (\r\n        <Col {...props}>\r\n            <form onSubmit={handleSubmit(onSubmitHandler)}>\r\n                {subComponents.map((component) => component)}\r\n            </form>\r\n        </Col>\r\n    )\r\n})\r\n\r\nForm.Input = Input\r\nForm.DatePicker = DatePicker\r\nForm.Dropdown = Dropdown\r\nForm.DataArray = DataArray\r\nForm.Submit = Submit\r\n\r\nexport {\r\n    errorMessage,\r\n    Input,\r\n    DataArray,\r\n    DatePicker,\r\n    Dropdown,\r\n    Submit,\r\n    Form\r\n}\r\n","import styled from \"styled-components\"\r\nimport { colors } from 'utils/StyleUtils'\r\n\r\nconst InputStyle = styled.input`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n    width: 100%;\r\n\r\n    border-style: ${props => props.borderStyle ? props.borderStyle : 'solid'};\r\n    border-width: ${props => props.borderWidth ? props.borderWidth : '0px'};\r\n    border-bottom-width: ${props => props.borderWidth ? props.borderWidth : '1px'};\r\n    border-color: ${props => props.borderColor ? props.borderColor : colors.darkGrey};\r\n    border-style: ${props => props.borderStyle ? props.borderStyle : 'solid'};\r\n    ${'' /* border-radius: 3px; */}\r\n`\r\n\r\nconst LabelStyle = styled.label`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n`\r\n\r\nconst InputMaskStyle = {\r\n    // borderColor: colors.black,\r\n    // borderWidth: '0px',\r\n    // borderBottomWidth: '2px',\r\n    width: '20em',\r\n    color: colors.fontColor,\r\n}\r\n\r\nexport { InputStyle, LabelStyle, InputMaskStyle }","/** Texto default do sistema\r\n * @param {var} value - Valor do componente\r\n * @param {text} label - Texto mostrado ao lado do componente\r\n * @param {object} labelProps - Objeto de props passadas para a label. Props aceitas sao as mesmas que o componente Text\r\n *\r\n * Styles\r\n * @param {number, string} width - Largura do texto, valor em porcentagem. Ex: 0.7 ou '60%'.\r\n * @param {number, string} height - Altura do texto, valor em porcentagem. Ex: 0.2 ou '30%'.\r\n * @param {string, object} align - Alinhamento do texto, opções: 'flex-start', 'center', 'flex-end'. Se for uma string aplicará nos dois eixos. Se for um objeto pode receber {horizontal: <string>, vertical: <string>} para aplicar dois alinhamentos distintos (default: 'flex-start').\r\n * @param {string} backgroundColor ADICIONAR - Hex da cor de fundo do texto. Ex: '#FF0066'.\r\n * @param {object} border - Recebe as propriedades: {width: <number>, color: <string>}.\r\n * @param {string, number, object} margin - Espaçamento da view do texto, exemplos: '10%', 0.3. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {string, number, object} padding - Espaçamento do texto até sua view, exemplos: '20%', 0.45. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {number} size - Tamanho da fonte do texto, se não for passado nada, o padrão retornado será 14.\r\n * @param {string} fontWeight - Aplica o estilo na fonte.\r\n * @param {string} fontFamily ADICIONAR - Aplica uma nova fonte.\r\n * @param {string} color - Hex da cor do texto (default: '#000').\r\n**/\r\n\r\nimport React, { useCallback, useState, memo } from 'react'\r\nimport { Row, Col, Text } from 'components/YeyComponents'\r\nimport InputMask from 'react-input-mask'\r\nimport { InputMaskStyle, InputStyle } from './InputStyle'\r\nimport MaterialInput from '@material-ui/core/Input'\r\nimport './InputCss.css'\r\nimport { InputAdornment, IconButton } from \"@material-ui/core\"\r\nimport Visibility from \"@material-ui/icons/Visibility\"\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\"\r\n\r\nconst Input = memo((props) => {\r\n    const { label, labelProps, mask, maskPlaceholder, type, maskOptions, datePicker, placeholder, readOnlyHandler, alwaysShowMask, value, onChangeValue, beforeChange, ref, keyValue, disabled } = props\r\n\r\n    let maskHandler = ''\r\n    let maskPlaceholderHandler = ''\r\n    const [isPasswordHidden, setIsPasswordHidden] = useState(true)\r\n\r\n    console.log('Inputkey', keyValue)\r\n\r\n    if (mask && typeof mask === 'string') {\r\n        switch (mask.toLowerCase()) {\r\n            case 'cpf':\r\n                maskHandler = '999.999.999-99'\r\n                maskPlaceholderHandler = '000.000.000-00'\r\n                break\r\n            case 'rg':\r\n                maskHandler = '99.999.999-9'\r\n                maskPlaceholderHandler = '00.000.000-0'\r\n                break\r\n            case 'cep':\r\n                maskHandler = '99999-999'\r\n                // maskPlaceholderHandler = '00000-000'\r\n                break\r\n            case 'cnpj':\r\n                maskHandler = '99.999.999/9999-99'\r\n                // maskPlaceholderHandler = '00.000.000/0000-00'\r\n                break\r\n            case 'ie': //Válida apenas para o estado de SP\r\n                maskHandler = '999.999.999.999'\r\n                maskPlaceholderHandler = '000.000.000.000'\r\n                break\r\n            case 'date':\r\n                // maskHandler = '00/00/0000'\r\n                // maskPlaceholderHandler = '00/00/0000'\r\n                break\r\n            case 'salary':\r\n                // maskHandler = '000.000.000.000,00'\r\n                // maskPlaceholderHandler = 'R$ 000.000.000.000,00'\r\n                break\r\n            default:\r\n                maskHandler = mask\r\n                maskPlaceholderHandler = maskPlaceholder\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeValueHandler = (newValue) => {\r\n        console.log('changeValueHandler: ', newValue)\r\n        // if(newValue && newValue.length > 5){\r\n        //     return 'aaa'\r\n        // }\r\n        // onChangeValue('aaa')\r\n        // if (mask && mask.toLowerCase() === 'salary' && newValue) {\r\n        //     newValue = newValue.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\r\n        // }\r\n        onChangeValue && typeof onChangeValue === 'function' && onChangeValue(newValue)\r\n    }\r\n\r\n    const beforeChangeValueHandler = () => {\r\n        console.log('beforeChangeValueHandler')\r\n\r\n        // if (mask && mask.toLowerCase() === 'salary' && newValue) {\r\n        //     newValue = newValue.toLocaleString('pt-br', { style: 'currency', currency: 'BRL' });\r\n        // }\r\n        // console.log('beforeChangeValueHandler2', newValue)\r\n        // return { ...nextState, newValue }\r\n        // newValue && beforeChange && typeof beforeChange === 'function' && newValue && beforeChange(newValue?.target?.value)\r\n    }\r\n\r\n    const preventMinus = (e) => {\r\n        if (e.code === 'Minus') {\r\n            e.preventDefault()\r\n        }\r\n    }\r\n\r\n    const handleClickShowPassword = () => setIsPasswordHidden(!isPasswordHidden)\r\n    const handleMouseDownPassword = () => setIsPasswordHidden(!isPasswordHidden)\r\n\r\n    return (\r\n        <Row width='auto' {...props}>\r\n            {typeof label == 'string' &&\r\n                <Text\r\n                    margin={{ right: '1em' }}\r\n                    type='label'\r\n                    {...labelProps}\r\n                >\r\n                    {label}\r\n                </Text>\r\n            }\r\n            <InputMask\r\n                // {...props}\r\n                value={value}\r\n                onChange={(newValue) => changeValueHandler(newValue?.target?.value)}\r\n                // onChange={onChangeValue}\r\n                // beforeMaskedValueChange={beforeChangeValueHandler}\r\n                mask='99999-999'\r\n                maskPlaceholder=''\r\n                maskChar=''\r\n                mask={maskHandler}\r\n                maskPlaceholder={maskPlaceholderHandler}\r\n                alwaysShowMask={alwaysShowMask}\r\n                readOnly={readOnlyHandler}\r\n                placeholder={placeholder}\r\n                style={{ ...InputMaskStyle }}\r\n                ref={ref}\r\n                disabled={disabled}\r\n            >\r\n                {/* {() => <InputStyle value={value} />} */}\r\n                {(inputProps) => {\r\n                    console.log('inputProps', inputProps)\r\n                    return <MaterialInput\r\n                        {...inputProps}\r\n                        style={{ width: '100%' }}\r\n                        disabled={disabled}\r\n                        key={keyValue}\r\n                        placeholder={placeholder}\r\n                        type={\r\n                            type === 'password' ?\r\n                                isPasswordHidden\r\n                                    ?\r\n                                    'password'\r\n                                    :\r\n                                    'text'\r\n                                :\r\n                                type\r\n                        }\r\n                        onKeyPress={preventMinus}\r\n                        readOnly={readOnlyHandler}\r\n                        value={value}\r\n                        endAdornment={type === 'password' &&\r\n                            <InputAdornment position=\"end\" >\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    tabIndex=\"-1\"\r\n                                >\r\n                                    {isPasswordHidden ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                }\r\n                }\r\n            </InputMask>\r\n        </Row>\r\n    )\r\n})\r\n\r\nexport default Input\r\n","import styled from \"styled-components\"\r\nimport { colors } from 'utils/StyleUtils'\r\n\r\nconst LabelStyle = styled.label`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n`\r\n\r\nexport { LabelStyle }","import React, { useState, useEffect, useCallback } from 'react'\r\nimport { LabelStyle } from './DatePickerStyle.js'\r\nimport { Row, Col, Text, Input } from 'components/YeyComponents'\r\nimport DatePickerComponent, { registerLocale } from \"react-datepicker\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport pt from 'date-fns/locale/pt'\r\nimport format from 'date-fns/format'\r\nimport './DatePickerCss.css'\r\nimport InputMask from 'react-input-mask'\r\n\r\nregisterLocale('pt', pt) // Criar funcao\r\n\r\nconst DatePicker = (props) => {\r\n    const { label, labelProps, value, onChangeValue, placeholder, onSelect, readOnlyHandler, locale, dateFormat, disabled } = props\r\n    const [years, setYears] = useState([])\r\n    const MAX_YEARS = 2\r\n\r\n    const changeValueHandler = useCallback((newValue) => {\r\n        onChangeValue && typeof onChangeValue == 'function' && onChangeValue(newValue)\r\n    }, [])\r\n\r\n    const selectHandler = useCallback((newValue) => {\r\n        onSelect && typeof onSelect == 'function' && onSelect(newValue)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        let yearsArray = []\r\n        console.log('Date().getYear()', new Date().getFullYear())\r\n        for (var i = 1930; i <= new Date().getFullYear() + MAX_YEARS; i++) {\r\n            //console.log('fori', i)\r\n            yearsArray.push(i)\r\n        }\r\n        setYears(yearsArray)\r\n    }, [])\r\n\r\n    const months = [\r\n        \"Janeiro\",\r\n        \"Fevereiro\",\r\n        \"Março\",\r\n        \"Abril\",\r\n        \"Maio\",\r\n        \"Junho\",\r\n        \"Julho\",\r\n        \"Agosto\",\r\n        \"Setembro\",\r\n        \"Outubro\",\r\n        \"Novembro\",\r\n        \"Dezembro\",\r\n    ]\r\n\r\n    return (\r\n        <Col {...props}>\r\n            {typeof label == 'string' &&\r\n                <Text\r\n                    margin={{ right: '1em' }}\r\n                    type='label'\r\n                    {...labelProps}\r\n                >\r\n                    {label}\r\n                </Text>\r\n            }\r\n            <Row>\r\n                <DatePickerComponent\r\n                    selected={value}\r\n                    onChange={changeValueHandler}\r\n                    onSelect={selectHandler}\r\n                    locale={locale || 'pt'}\r\n                    dateFormat={dateFormat || 'dd/MM/yyyy'}\r\n                    customInput={\r\n                        // <input value={value} onChange={onChangeValue} type=\"number\" />\r\n                        <Input value={value} placeholder={placeholder} onChangeValue={onChangeValue} readOnlyHandler={readOnlyHandler} />\r\n                    }\r\n                    style={{}}\r\n                    disabled={disabled}\r\n                    fixedHeight\r\n                    renderCustomHeader={({\r\n                        date,\r\n                        changeYear,\r\n                        changeMonth,\r\n                        decreaseMonth,\r\n                        increaseMonth,\r\n                        prevMonthButtonDisabled,\r\n                        nextMonthButtonDisabled,\r\n                    }) => (\r\n                        <div\r\n                            style={{\r\n                                margin: 10,\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <select\r\n                                value={months[date.getMonth()]}\r\n                                onChange={({ target: { value } }) =>\r\n                                    changeMonth(months.indexOf(value))\r\n                                }\r\n                            >\r\n                                {months.map((option) => (\r\n                                    <option key={option} value={option}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                            <select\r\n                                value={date.getFullYear()}\r\n                                onChange={({ target: { value } }) => changeYear(value)}\r\n                            >\r\n                                {years.map((option) => (\r\n                                    <option key={option} value={option}>\r\n                                        {option}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    )}\r\n                />\r\n            </Row>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default DatePicker\r\n","import styled from \"styled-components\"\r\nimport { colors } from 'utils/StyleUtils'\r\n\r\nconst InputStyle = styled.input`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n`\r\n\r\nconst LabelStyle = styled.label`\r\n    color: ${props => props.color ? props.color : colors.fontColor};\r\n    font-size: ${props => props.size ? props.size : '1.2em'};\r\n    font-weight: ${props => props.fontWeight && props.fontWeight};\r\n`\r\n\r\nexport { InputStyle, LabelStyle }","/** Texto default do sistema\r\n * @param {text} children - Texto mostrado na tela.\r\n * \r\n * Styles\r\n * @param {number, string} width - Largura do texto, valor em porcentagem. Ex: 0.7 ou '60%'.\r\n * @param {number, string} height - Altura do texto, valor em porcentagem. Ex: 0.2 ou '30%'.\r\n * @param {string, object} align - Alinhamento do texto, opções: 'flex-start', 'center', 'flex-end'. Se for uma string aplicará nos dois eixos. Se for um objeto pode receber {horizontal: <string>, vertical: <string>} para aplicar dois alinhamentos distintos (default: 'flex-start').\r\n * @param {string} backgroundColor ADICIONAR - Hex da cor de fundo do texto. Ex: '#FF0066'.\r\n * @param {object} border - Recebe as propriedades: {width: <number>, color: <string>}.\r\n * @param {string, number, object} margin - Espaçamento da view do texto, exemplos: '10%', 0.3. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {string, number, object} padding - Espaçamento do texto até sua view, exemplos: '20%', 0.45. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {number} size - Tamanho da fonte do texto, se não for passado nada, o padrão retornado será 14.\r\n * @param {string} fontWeight - Aplica o estilo na fonte.\r\n * @param {string} fontFamily ADICIONAR - Aplica uma nova fonte.\r\n * @param {string} color - Hex da cor do texto (default: '#000').\r\n**/\r\n\r\nimport React, { useCallback } from 'react'\r\nimport { } from './DropdownStyle.js'\r\nimport { Row, Col, Text } from 'components/YeyComponents'\r\nimport Select from 'react-select'\r\nimport { colors } from 'utils/StyleUtils'\r\n\r\nconst Dropdown = (props) => {\r\n    const { label, labelProps, multiSelect, menuPortalTarget, maxMenuHeight, menuPosition, closeMenuOnSelect, disabled, mask, maskPlaceholder, readOnly, defaultValue, values, selectedValues, onChangeValue, placeholder, inputRef, minWidth, maxWidth } = props\r\n\r\n    const changeValueHandler = (newValue) => {\r\n        console.log('changeValueHandler: ', newValue)\r\n        // setValue(newValue.target.value)\r\n        onChangeValue && typeof onChangeValue == 'function' && onChangeValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <Col display='block' {...props} >\r\n            <Text type='label' {...labelProps} {...props}>{label}</Text>\r\n            <Select\r\n                width='100%'\r\n                // {...props}\r\n                inputRef={inputRef}\r\n                options={values}\r\n                onChange={(newValue) => changeValueHandler(newValue)}\r\n                value={selectedValues}\r\n                isMulti={multiSelect}\r\n                closeMenuOnSelect={closeMenuOnSelect ? closeMenuOnSelect : multiSelect ? true : false}\r\n                placeholder={placeholder || 'Pesquise aqui...'}\r\n                menuPlacement=\"auto\"\r\n                menuPosition={menuPosition}\r\n                maxMenuHeight={220 || maxMenuHeight}\r\n                styles={{\r\n                    option: (provided, state) => ({\r\n                        ...provided,\r\n                        color: state.isSelected ? colors.white : colors.fontColor,\r\n                    }),\r\n                    control: (defaultControlValues) => ({\r\n                        ...defaultControlValues,\r\n                        minWidth: minWidth || '20em',\r\n                        maxWidth: maxWidth || '100%',\r\n                    }),\r\n                    singleValue: (provided, state) => {\r\n                        // const opacity = state.isDisabled ? 0.5 : 1;\r\n                        // const transition = 'opacity 300ms';\r\n\r\n                        // return { ...provided, opacity, transition };\r\n                    },\r\n                    menu: provided => {\r\n                        return { ...provided, zIndex: 999999999999999 } //, position: 'absolute', \r\n                    },\r\n                }}\r\n                // menuPortalTarget={document.getElementById('root')}\r\n                menuPortalTarget={menuPortalTarget}\r\n                defaultValue={defaultValue}\r\n                isDisabled={disabled}\r\n            />\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","/** Texto default do sistema\r\n * @param {array} data - Array de objetos contendo os valores das colunas. Exemplo: [{ name: '', surname: 'Baran', birthYear: 1987, birthCity: 34 }]\r\n * @param {array} columns - Array de objetos contendo title e field. Exemplo: [{ title: 'Nome', field: 'name' }, {...}]\r\n * @param {string} title - Texto com o titulo da tabela\r\n * Styles\r\n * @param {number, string} width - Largura do texto, valor em porcentagem. Ex: 0.7 ou '60%'.\r\n * @param {number, string} height - Altura do texto, valor em porcentagem. Ex: 0.2 ou '30%'.\r\n * @param {string, object} align - Alinhamento do texto, opções: 'flex-start', 'center', 'flex-end'. Se for uma string aplicará nos dois eixos. Se for um objeto pode receber {horizontal: <string>, vertical: <string>} para aplicar dois alinhamentos distintos (default: 'flex-start').\r\n * @param {string} backgroundColor ADICIONAR - Hex da cor de fundo do texto. Ex: '#FF0066'.\r\n * @param {object} border - Recebe as propriedades: {width: <number>, color: <string>}.\r\n * @param {string, number, object} margin - Espaçamento da view do texto, exemplos: '10%', 0.3. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {string, number, object} padding - Espaçamento do texto até sua view, exemplos: '20%', 0.45. Se for uma string aplicará nos 4 cantos. Se for um objeto pode receber {top: <value>, bottom: <value>, left: <value>, right: <value>} para aplicar espaçamentos diferentes.\r\n * @param {number} size - Tamanho da fonte do texto, se não for passado nada, o padrão retornado será 14.\r\n * @param {string} fontWeight - Aplica o estilo na fonte.\r\n * @param {string} fontFamily ADICIONAR - Aplica uma nova fonte.\r\n * @param {string} color - Hex da cor do texto (default: '#000').\r\n**/\r\n\r\nimport React, { forwardRef, useState, useEffect } from 'react'\r\nimport { Row, Col, Input, Text } from 'components/YeyComponents'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport './Table.css'\r\n\r\nimport MaterialTable, { MTableToolbar } from 'material-table'\r\n//import ReactDataGrid from 'react-data-grid'\r\n// import createRowData from './createRowData';\r\n\r\n\r\nimport ReactDataGrid from '@inovua/reactdatagrid-community'\r\nimport '@inovua/reactdatagrid-community/index.css'\r\nimport CheckBox from '@inovua/reactdatagrid-community/packages/CheckBox'\r\nimport NumberFilter from '@inovua/reactdatagrid-community/NumberFilter'\r\nimport SelectFilter from '@inovua/reactdatagrid-community/SelectFilter'\r\nimport DateFilter from '@inovua/reactdatagrid-community/DateFilter'\r\nimport '@inovua/reactdatagrid-community/theme/default-light.css'\r\n// import '@inovua/reactdatagrid-community/index.css'\r\n// import '@inovua/reactdatagrid-community/base.css'\r\n\r\n// Imports dos icones utilizados na tabela\r\nimport AddBox from '@material-ui/icons/AddBox'\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward'\r\nimport Check from '@material-ui/icons/Check'\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRight from '@material-ui/icons/ChevronRight'\r\nimport Clear from '@material-ui/icons/Clear'\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline'\r\nimport Edit from '@material-ui/icons/Edit'\r\nimport FilterList from '@material-ui/icons/FilterList'\r\nimport FirstPage from '@material-ui/icons/FirstPage'\r\nimport LastPage from '@material-ui/icons/LastPage'\r\nimport Remove from '@material-ui/icons/Remove'\r\nimport SaveAlt from '@material-ui/icons/SaveAlt'\r\nimport Search from '@material-ui/icons/Search'\r\nimport ViewColumn from '@material-ui/icons/ViewColumn'\r\n\r\nconst Table = (props) => {\r\n    const { data, columns, rowStyle, onReady, handle, defaultFilterValues, defaultLimit, defaultSortInfo, sortable, title, getValue, editable, limit, pagination, onLimitChange, renderRowContextMenu, showColumnMenuTool, showEmptyRows, onEditComplete } = props\r\n\r\n    const [columnsHandler, setColumnsHandler] = useState([])\r\n\r\n    useEffect(() => {\r\n        let columnsArray = []\r\n        if (columns && Array.isArray(columns)) {\r\n            columnsArray = columns.map((columnValue) => {\r\n                console.log('columnValue', columnValue)\r\n                switch (columnValue?.filterType?.toLowerCase()) {\r\n                    case 'checkbox':\r\n                        return { ...columnValue, filterEditor: CheckBox }\r\n                    case 'date':\r\n                        return { ...columnValue, filterEditor: DateFilter }\r\n                    case 'select':\r\n                        return { ...columnValue, filterEditor: SelectFilter }\r\n                    case 'number':\r\n                        return { ...columnValue, filterEditor: NumberFilter }\r\n                    default:\r\n                        return { ...columnValue }\r\n                }\r\n            })\r\n        }\r\n        console.log('columnsArray: ', columnsArray)\r\n        setColumnsHandler(columnsArray)\r\n    }, [columns])\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    }\r\n\r\n\r\n    const emptyText = <b style={{}}>Nenhum valor encontrado</b>\r\n    console.log('i18n', ReactDataGrid.defaultProps.i18n)\r\n    const i18n = Object.assign({}, ReactDataGrid.defaultProps.i18n, {\r\n        sortAsc: 'Ordem ascendente',\r\n        sortDesc: 'Ordem descendente',\r\n        clear: 'Remover',\r\n        clearAll: 'Remover todos',\r\n        inlist: 'Listados',\r\n        inrange: 'No alcance',\r\n        notinrange: 'Fora do alcance',\r\n        notinlist: 'Não listados',\r\n        eq: 'Iguais a',\r\n        neq: 'Diferentes de',\r\n        gt: 'Maior que',\r\n        gte: 'Maior ou igual a',\r\n        lt: 'Menor que',\r\n        lte: 'Menor ou igual a',\r\n        disable: 'Desabilitar',\r\n        enable: 'Habilitar',\r\n        after: 'Depois',\r\n        afterOrOn: 'Depois ou dentro',\r\n        empty: 'Vazio',\r\n        notEmpty: 'Preenchido',\r\n        startsWith: 'Começa com',\r\n        endsWith: 'Termina com',\r\n        endsWith: 'Preenchido',\r\n        contains: 'Contém',\r\n        notContains: 'Não contém',\r\n        before: 'Antes',\r\n        beforeOrOn: 'Antes ou dentro',\r\n        perPageText: 'Resultados por página',\r\n        showingText: 'Exibindo ',\r\n        ofText: ' de ',\r\n        pageText: 'Página ',\r\n        columns: 'Colunas',\r\n        showFilteringRow: 'Mostrar filtro',\r\n        hideFilteringRow: 'Esconder filtro',\r\n        lockStart: 'Trancar início',\r\n        lockEnd: 'Trancar final',\r\n        unsort: 'Remover ordenação',\r\n        renderLoadMask: {\r\n            loadingText: 'Carregando...',\r\n        },\r\n        loadingText: 'Carregando...',\r\n\r\n    })\r\n\r\n\r\n    const filterTypes = Object.assign({}, ReactDataGrid.defaultProps.filterTypes, {\r\n        string: {\r\n            name: 'string',\r\n            emptyValue: null,\r\n            operators: [\r\n                {\r\n                    name: 'contains',\r\n                    fn: ({ value, filterValue, data }) => {\r\n                        return filterValue != null ? filterValue === value : true;\r\n                    }\r\n                },\r\n                // {\r\n                //     name: 'neq',\r\n                //     fn: ({ value, filterValue, data }) => {\r\n                //         return filterValue != null ? filterValue !== value : true;\r\n                //     }\r\n                // }\r\n            ]\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div style={{ flex: 1, width: '100%', flexGrow: 1, }}>\r\n            {title && <Text align={{ horizontal: 'flex-start' }}>{title}</Text>}\r\n\r\n            {/* <Input style={{ marginBottom: 20, padding: 5, width: 250 }} type='text' autoFocus defaultValue='Hit tab to navigate to grid' /> */}\r\n            <ReactDataGrid\r\n                idProperty='id'\r\n                // style={{ minHeight: 250 }}\r\n                style={{ minHeight: '55em', flex: 1, flexGrow: 1, overflow: 'visible' }}\r\n                columns={columnsHandler}\r\n                dataSource={data}\r\n                filterTypes={filterTypes}\r\n                defaultFilterValue={defaultFilterValues}\r\n                defaultSortInfo={defaultSortInfo}\r\n                emptyText={emptyText}\r\n                i18n={i18n}\r\n                sortable={sortable}\r\n                showCellBorders={true}\r\n                limit={limit}\r\n                pagination={pagination}\r\n                onLimitChange={onLimitChange}\r\n                renderRowContextMenu={renderRowContextMenu}\r\n                showColumnMenuTool={showColumnMenuTool}\r\n                showEmptyRows={typeof showEmptyRows !== 'undefined' ? showEmptyRows : true}\r\n                loadingText={'Carregando...'}\r\n                rowStyle={rowStyle}\r\n                minRowHeight={50}\r\n                rowHeight={null}\r\n                onEditComplete={onEditComplete}\r\n                //editable={editable}\r\n                onReady={onReady}\r\n                pageSizes={[5, 10, 15, 20, 40, 80]}\r\n                defaultLimit={defaultLimit || 15}\r\n                columnUserSelect={true}\r\n                handle={handle}\r\n            />\r\n            {/* <Input style={{ marginTop: 20, padding: 5, width: 250 }} type='text' defaultValue='Hit shift+tab to navigate to grid' /> */}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Table","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ModalUi from '@material-ui/core/Modal'\r\n\r\nfunction rand() {\r\n    return Math.round(Math.random() * 20) - 10\r\n}\r\n\r\nfunction getModalStyle() {\r\n    const top = -20//20 + rand()\r\n    const left = 55 + rand()\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        width: '30em',\r\n        backgroundColor: theme.palette.background.paper,\r\n        //border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}))\r\n\r\nconst Modal = (props) => {\r\n    const { isVisible, setIsVisible, children } = props\r\n\r\n    const classes = useStyles()\r\n\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n    const [modalStyle] = useState(getModalStyle)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setIsVisible(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isVisible) setOpen(true)\r\n        else setOpen(false)\r\n    }, [isVisible])\r\n\r\n    const body = (\r\n        <div style={modalStyle} className={classes.paper}>\r\n            {children}\r\n            <Modal />\r\n        </div>\r\n    )\r\n    console.log('rand', rand())\r\n\r\n    return (\r\n        <div>\r\n            <ModalUi\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                {body}\r\n            </ModalUi>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\r\nimport MuiDialogContent from '@material-ui/core/DialogContent'\r\nimport MuiDialogActions from '@material-ui/core/DialogActions'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n})\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    )\r\n})\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(2),\r\n    },\r\n}))(MuiDialogContent)\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions)\r\n\r\nconst CustomizedDialogs = (props) => {\r\n    const { isVisible, setIsVisible, title, text, buttonText, secondaryButtonText, onClick, secondaryButtonOnClick, secondaryButton, children, disabled } = props\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const onClickHandler = () => {\r\n        onClick && typeof onClick === 'function' && onClick()\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n        setIsVisible(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isVisible) setOpen(true)\r\n        else setOpen(false)\r\n    }, [isVisible])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                {title &&\r\n                    <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                        {title}\r\n                    </DialogTitle>\r\n                }\r\n                {text &&\r\n                    <DialogContent dividers>\r\n                        <Typography gutterBottom>\r\n                            {text}\r\n                        </Typography>\r\n                        {text && Array.isArray(text) && text.map(({ string, props }) => {\r\n                            <Typography {...props} gutterBottom>\r\n                                {string}\r\n                            </Typography>\r\n                        })}\r\n                        {children}\r\n                    </DialogContent>\r\n                }\r\n\r\n                <DialogActions style={{ alignItems: 'space-around', justifyContent: 'space-around'}}>\r\n                    {secondaryButton &&\r\n                        <Button onClick={secondaryButtonOnClick} color=\"primary\">\r\n                            {secondaryButtonText || 'Cancelar'}\r\n                        </Button>\r\n                    }\r\n                    <Button onClick={onClickHandler} disabled={disabled} color=\"primary\">\r\n                        {buttonText || 'Enviar'}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedDialogs\r\n","import { Button, PageView, Text } from 'components/YeyComponents'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst NotFound = () => {\r\n  const history = useHistory()\r\n  return (\r\n    <PageView>\r\n      <Text type='title' padding={{ top: '1em' }}>Página não encontrada</Text>\r\n      <hr style={{ marginTop: '2em' }} />\r\n      <Text padding={{ top: '1em' }}>Por favor, verifique a URL digitada e tente novamente. </Text>\r\n      <Text padding={{ top: '1em' }}>Se você acha que isto não deveria acontecer, tente contatar o suporte para verificar o problema. </Text>\r\n      <hr style={{ marginTop: '2em' }} />\r\n      <br />\r\n      <Button onClickFunction={() => history.push(`/menu/dashboard`)}>Voltar</Button>\r\n    </PageView>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import AUTH_TYPES from 'redux/types/auth'\n\nconst INITIAL_STATE = {\n  id: null,\n  username: null,\n  name: null,\n  roleId: null\n}\n\nexport default function authReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case AUTH_TYPES.LOGIN:\n      return {...state, ...action.data}\n    case AUTH_TYPES.LOGOUT:\n      return {...state, ...INITIAL_STATE}\n    case AUTH_TYPES.UPDATE_USERDATA:\n      return {...state, ...action.userData}\n    default:\n      return state\n  }\n}\n","const PREFIX = \"COMBOS\"\nconst COMBO_TYPES = {\n  LOAD_ALL: `${PREFIX}/LOAD_ALL`,\n  LOAD_CITIES_FROM_STATE: `${PREFIX}/LOAD_CITIES_FROM_STATE`\n}\n\nexport default COMBO_TYPES\n","import COMBO_TYPES from 'redux/types/combos'\n\nconst INITIAL_STATE = {\n  companiesList: [],\n  schoolsList: [],\n  statesList: [],\n  revocationReasonsList: [],\n  citiesList: [],\n  insuranceData: {\n    holder: null,\n    policyCode: null\n }\n}\nexport default function comboReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case COMBO_TYPES.LOAD_ALL:\n      return {...state, ...action.data}\n    case COMBO_TYPES.LOAD_CITIES_FROM_STATE:\n      return {...state, citiesList: action.citiesList}\n    default:\n      return state\n  }\n}\n","const PREFIX = \"WORKING_SCHEDULE\"\r\nconst WORKING_SCHEDULE_TYPES = {\r\n  ADD_WORKLOAD: `${PREFIX}/ADD_WORKLOAD`,\r\n}\r\n\r\nexport default WORKING_SCHEDULE_TYPES","import WORKING_SCHEDULE_TYPES from \"redux/types/workingSchedule\"\r\n\r\nconst INITIAL_STATE = {\r\n  weekDays: [\r\n    {weekdayId: 1, hours: 0},\r\n    {weekdayId: 2, hours: 0},\r\n    {weekdayId: 3, hours: 0},\r\n    {weekdayId: 4, hours: 0},\r\n    {weekdayId: 5, hours: 0},\r\n    {weekdayId: 6, hours: 0},\r\n    {weekdayId: 7, hours: 0},\r\n  ],\r\n  minWorkload: 20,\r\n  maxWorkload: 30\r\n}\r\n\r\nexport default function workingScheduleReducer(state = INITIAL_STATE, action = {}) {\r\n  switch (action.type) {\r\n    case WORKING_SCHEDULE_TYPES.ADD_WORKLOAD:\r\n      return {...state, weekDays: [...state.weekDays.map(w => {\r\n        if(w.weekdayId === Number(action.weekDayId)) {\r\n          w.hours = action.workLoadValue\r\n        }\r\n        return w\r\n      })], }\r\n    default:\r\n      return state\r\n  }\r\n}","const PREFIX = \"SCHOOL\"\nconst SCHOOL_TYPES = {\n  CREATE_SCHOOL: `${PREFIX}/CREATE`,\n  UPDATE_SCHOOL: `${PREFIX}/UPDATE`,\n  GET_SCHOOL: `${PREFIX}/GET`,\n  CLEAR: `${PREFIX}/CLEAR`\n}\n\nexport default SCHOOL_TYPES\n","import SCHOOL_TYPES from 'redux/types/school'\n\nconst INITIAL_STATE = {\n  id: null,\n  name: null,\n  zipcode: null,\n  street: null,\n  number: null,\n  complement: null,\n  district: null,\n  stateId: null,\n  cityId: null,\n  isActive: null,\n  createdAt: null,\n  updatedAt: null\n}\n\nexport default function schoolReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case SCHOOL_TYPES.GET_SCHOOL:\n      return {...state, ...action.school}\n    case SCHOOL_TYPES.CLEAR:\n      return {...state, ...INITIAL_STATE}\n    default:\n      return state\n  }\n}\n","import DASHBOARD_TYPES from 'redux/types/dashboard'\n\nconst INITIAL_STATE = {\n  contracts: {\n    active: 0,\n    awaitingSignature: 0,\n    closeExpire: 0\n  }\n}\n\nexport default function dashboardReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case DASHBOARD_TYPES.COUNT:\n      return {...state, contracts: action.data}\n    default:\n      return state\n  }\n}\n","const PREFIX = \"COMPANY\"\r\nconst COMPANY_TYPES = {\r\n  CREATE: `${PREFIX}/CREATE`,\r\n  UPDATE: `${PREFIX}/UPDATE`,\r\n  GET_BY_ID: `${PREFIX}/GET_BY_ID`,\r\n  CLEAR: `${PREFIX}/CLEAR`\r\n}\r\n\r\nexport default COMPANY_TYPES\r\n","import COMPANY_TYPES from 'redux/types/company'\n\nconst INITIAL_STATE = {\n  id: null,\n  companyName: null,\n  tradeName: null,\n  cnpj: null,\n  ie: null,\n  zipcode: null,\n  street: null,\n  number: null,\n  complement: null,\n  district: null,\n  cityId: null,\n  stateId: null,\n  parentCompanyId: null,\n  isActive: null,\n  defaultSupervisor: null\n}\n\nexport default function companyReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case COMPANY_TYPES.GET_BY_ID:\n      return {...state, ...action.company}\n    case COMPANY_TYPES.CLEAR:\n      return {...state, ...INITIAL_STATE}\n    default:\n      return state\n  }\n}\n","const PREFIX = \"USER\"\nconst USER_TYPES = {\n  UPDATE_USER: `${PREFIX}/UPDATE`,\n  CREATE_USER: `${PREFIX}/CRATE`,\n  LOAD_USER: `${PREFIX}/LOAD`,\n  CLEAR: `${PREFIX}/CLEAR`\n}\n\nexport default USER_TYPES\n","import USER_TYPES from 'redux/types/user'\n\nconst INITIAL_STATE = {\n  id: null,\n  username: null,\n  email: null,\n  name: null,\n  isActive: null,\n  roleId: null\n}\nexport default function userReducer(state = INITIAL_STATE, action = {}) {\n  switch (action.type) {\n    case USER_TYPES.LOAD_USER:\n      return {...state, ...action.user}\n    case USER_TYPES.CLEAR:\n      return {...state, ...INITIAL_STATE}\n    default:\n      return state\n  }\n}\n","import {combineReducers} from 'redux'\nimport auth from './auth'\nimport combos from './combos'\nimport workingSchedule from './workingSchedule'\nimport school from './school'\nimport dashboard from './dashboard'\nimport company from './company'\nimport user from './user'\n\nexport default combineReducers({\n  auth, combos, workingSchedule, school, dashboard, company, user\n})\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport reducers from 'redux/reducers'\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  applyMiddleware(\r\n    thunkMiddleware\r\n  )\r\n)\r\n\r\nexport default store","import { getToken, isValidJWT, extractDataFromJWTToken } from \"services/token\"\r\nimport store from 'redux/store'\r\nimport AUTH_TYPES from 'redux/types/auth'\r\n\r\nconst hasAuthenticated = () => isValidJWT(getToken())\r\nif(hasAuthenticated() === true) {\r\n  store.dispatch({\r\n    type: AUTH_TYPES.LOGIN,\r\n    data: extractDataFromJWTToken(getToken())\r\n  })\r\n}\r\n\r\nexport default hasAuthenticated\r\n","import React from \"react\"\nimport {Redirect, Route} from \"react-router-dom\"\n\nimport NotFound from \"pages/notFound\"\n\nimport hasAuthenticated from \"utils/hasAuthenticated\"\n\nconst DefaultRoute = ({isPrivate = false, redirectURI = \"/\", isLogin = false, component: Component, ...rest}) => {\n  if(!Component) return <NotFound />\n  return (\n    <Route {...rest} render = {props => {\n      if(isPrivate === false && isLogin === true && hasAuthenticated() === true) {\n        return <Redirect to=\"/menu/dashboard\" />\n      }\n      if(isPrivate === false) {\n        return <Component {...props} />\n      }\n      if(hasAuthenticated() === true) {\n        return <Component {...props} />\n      } else {\n        return <Redirect to=\"/login\" />\n      }\n    }} />\n  )\n}\n\nexport default DefaultRoute\n","export const statusLOV = [\n    { id: 'awaiting_signature', label: 'Aguardando Assinatura', value: 'awaiting_signature', color: 'yellow', acceptedValues: ['awaiting_signature', 'signed', 'cancelled'] },\n    { id: 'signed', label: 'Assinado', value: 'signed', color: 'blue', acceptedValues: ['signed', 'cancelled',] },\n    { id: 'active', label: 'Ativo', value: 'active', color: 'green', acceptedValues: ['active', 'revoked', 'awaiting_signature'] },\n    { id: 'expired', label: 'Expirado', value: 'expired', color: 'grey', acceptedValues: ['expired',] },\n    { id: 'revoked', label: 'Rescindido', value: 'revoked', color: 'red', acceptedValues: ['revoked',] },\n    { id: 'cancelled', label: 'Cancelado', value: 'cancelled', color: 'red', acceptedValues: ['cancelled',] },\n]\n\nexport const isActiveLOV = [\n  {id: 'Não', label: 'Não', value: 'Não'},\n  {id: 'Sim', label: 'Sim', value: 'Sim'},\n  {id: 'Todos', label: 'Todos', value: 'Todos'}\n]\n\nexport const paginationLimit = 15\n\nexport const queryParamsConstructor = ({ limit, skip = 0, sortInfo = \"\", groupBy = \"\", filterValue }) => {\n    const queryParams = {\n        page: (limit + skip) / limit,\n        pageSize: limit\n    }\n\n    filterValue.forEach(filterElement => {\n        console.log('filterElement', filterElement?.value, filterElement)\n        if (typeof filterElement?.name !== 'undefined' && filterElement?.value) {\n            if (filterElement?.name === 'startDate' || filterElement?.name === 'endDate') {\n                queryParams[filterElement.name] = new Date(filterElement?.value).toLocaleDateString('fr-CA')\n                // queryParams[filterElement.name] = format(new Date(filterElement.value), 'yyyy-MM-dd')\n            } else if(filterElement?.name === 'isActive') {\n              let value = filterElement?.value\n              switch(value) {\n                case 'Sim':\n                  value = true\n                  break\n                case 'Não':\n                  value = false\n                  break\n                default:\n                  value = null\n                  break\n              }\n              if(value !== null) {\n                queryParams[filterElement.name] = value\n              }\n            }\n            else {\n                queryParams[filterElement.name] = filterElement.value\n            }\n        }\n    })\n\n    return queryParams\n\n}\n","import toast from 'react-hot-toast'\nimport api from 'services/api'\nimport errorHandler from 'utils/errorHandler'\n\nconst formatAndDownloadFile = (response, docId, filename) => {\n    const url = window.URL.createObjectURL(response.data)\n    const a = document.createElement('a')\n    a.href = url\n    a.download = `${filename}_${docId}.pdf`\n    a.click()\n    a.remove()\n    setTimeout(() => window.URL.revokeObjectURL(url), 100)\n}\n\nconst downloadContractObject = contractId => {\n    return dispatch => {\n        let toastId = toast.loading(`Baixando contrato de estágio... `)\n        api.post(`report`, { reportName: `rpt_contrato_estagio`, params: { id: contractId } }, { responseType: `blob` })\n            .then(response => {\n                formatAndDownloadFile(response, contractId, `contrato`)\n                dispatch({ type: 'CONTRACT_DOWNLOAD' })\n                toast.success(`Arquivo baixado com sucesso. `)\n            })\n            .catch(err => toast.error(`Erro ao baixar: ${errorHandler(err)}`))\n            .finally(() => toast.dismiss(toastId))\n    }\n}\n\nconst downloadContractTerminationTerm = contractId => {\n    return dispatch => {\n        let toastId = toast.loading(`Baixando termo de rescisão... `)\n        api.post(`report`, { reportName: `rpt_termo_rescisao`, params: { id: contractId } }, { responseType: `blob` })\n            .then(response => {\n                formatAndDownloadFile(response, contractId, `termo-rescisao`)\n                dispatch({ type: 'TERMINATION_TERM_DOWNLOAD' })\n                toast.success(`Arquivo baixado com sucesso. `)\n            })\n            .catch(err => toast.error(`Erro ao baixar: ${errorHandler(err)}`))\n            .finally(() => toast.dismiss(toastId))\n    }\n}\n\nconst downloadContractDismissalLetter = contractId => {\n    return dispatch => {\n        let toastId = toast.loading(`Baixando carta de aviso... `)\n        api.post(`report`, { reportName: `rpt_carta_aviso`, params: { id: contractId } }, { responseType: `blob` })\n            .then(response => {\n                formatAndDownloadFile(response, contractId, `carta-aviso`)\n                dispatch({ type: 'DISMISSAL_LETTER_DOWNLOAD' })\n                toast.success(`Arquivo baixado com sucesso. `)\n            })\n            .catch(err => toast.error(`Erro ao baixar: ${errorHandler(err)}`))\n            .finally(() => toast.dismiss(toastId))\n    }\n}\n\nconst downloadCustomerEvaluationForm = (contractId, referencePeriod) => {\n    return dispatch => {\n        let toastId = toast.loading(`Baixando ficha de avaliação de desempenho... `)\n        api.post(`report`, { reportName: `rpt_avaliacao_desempenho`, params: { id: contractId, period: referencePeriod } }, { responseType: `blob` })\n            .then(response => {\n                formatAndDownloadFile(response, contractId, `avaliacao-desempenho`)\n                dispatch({ type: 'EVALUATION_FORM_DOWNLOAD' })\n                toast.success(`Arquivo baixado com sucesso. `)\n            })\n            .catch(err => toast.error(`Erro ao baixar: ${errorHandler(err)}`))\n            .finally(() => toast.dismiss(toastId))\n    }\n}\n\nconst downloadCustomerRelations = (companyId) => {\n    return dispatch => {\n        let toastId = toast.loading(`Baixando lista de estagiários da empresa... `)\n        api.post(`report`, { reportName: `rpt_relacao_estagiarios`, params: { companyId: companyId } }, { responseType: `blob` })\n            .then(response => {\n                formatAndDownloadFile(response, companyId, `relacao-estagiarios`)\n                dispatch({ type: 'EVALUATION_FORM_DOWNLOAD' })\n                toast.success(`Arquivo baixado com sucesso. `)\n            })\n            .catch(err => toast.error(`Erro ao baixar: ${errorHandler(err)}`))\n            .finally(() => toast.dismiss(toastId))\n    }\n}\n\nexport { downloadContractObject, downloadContractTerminationTerm, downloadContractDismissalLetter, downloadCustomerEvaluationForm, downloadCustomerRelations }\n","import React, { useState, useCallback, memo } from \"react\"\r\nimport { Text, Col, PageView, Table, Button } from 'components/YeyComponents'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport api from 'services/api'\r\nimport { isActiveLOV, paginationLimit, queryParamsConstructor } from 'utils/Utils'\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Menu, MenuItem } from \"@material-ui/core\"\r\nimport { downloadCustomerRelations, } from 'redux/actions/report'\r\nimport { useDispatch, } from \"react-redux\"\r\n\r\nconst Empresa = () => {\r\n    const defaultFilterValues = [\r\n        { name: 'companyName', operator: 'contains', type: 'string' },\r\n        { name: 'cnpj', operator: 'contains', type: 'string' },\r\n        { name: 'isActive', operator: 'eq', type: 'string' }\r\n        // { name: 'city', operator: 'contains', type: 'string' },\r\n        // { name: 'stateAbbr', operator: 'contains', type: 'string' },\r\n    ]\r\n\r\n    const [newFilterValue, setNewFilterValue] = useState(defaultFilterValues)\r\n    const [limit, setLimit] = useState(paginationLimit)\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const loadData = (props = {}) => {\r\n        const { skip = 0, sortInfo = \"\", groupBy = \"\", filterValue = newFilterValue } = props\r\n\r\n        const queryParams = queryParamsConstructor({ limit, skip, sortInfo, groupBy, filterValue })\r\n\r\n        return api.get(\"companies\", { params: queryParams }).then(response => {\r\n            const totalCount = response?.data?.total\r\n            return {\r\n                data: response?.data?.companies?.map(c => {\r\n                    return c\r\n                }),\r\n                count: totalCount * 1\r\n            }\r\n        })\r\n    }\r\n\r\n    const dataSource = useCallback(loadData, [newFilterValue, limit])\r\n\r\n    const companyActiveRender = useCallback(({ value }) => {\r\n        if (value) return 'Sim'\r\n        else return 'Não'\r\n    }, [])\r\n\r\n    const ActionComponent = memo(({ data }) => {\r\n        const [isMenuVisible, setIsMenuVisible] = useState(null)\r\n\r\n        const handleClick = (event) => {\r\n            setIsMenuVisible(event?.currentTarget)\r\n        }\r\n\r\n        const handleClose = () => {\r\n            setIsMenuVisible(false)\r\n        }\r\n\r\n        const editCompany = () => {\r\n            setIsMenuVisible(false)\r\n            history.push(`/menu/cadastro/empresa/${data?.id}`)\r\n        }\r\n\r\n        const getCustomersRelations = () => {\r\n            dispatch(downloadCustomerRelations(data?.id))\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div id=\"action\" onClick={handleClick}>\r\n                    <BsThreeDotsVertical size={20} />\r\n                </div>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={isMenuVisible}\r\n                    keepMounted\r\n                    open={Boolean(isMenuVisible)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={editCompany}>Editar Empresa</MenuItem>\r\n                    <MenuItem onClick={getCustomersRelations}>Gerar Lista de Estagiários</MenuItem>\r\n                </Menu>\r\n            </>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <PageView>\r\n            <Col align={{ horizontal: 'flex-start' }} flex={1} height='99%'>\r\n                <Text\r\n                    type='title'\r\n                    color={colors.darkGrey}\r\n                >\r\n                    Empresas\r\n                </Text>\r\n                <Button style='submit' viewStyle={{ padding: { bottom: '1em' }, align: 'flex-start' }} onClickFunction={() => history.push(\"/menu/cadastro/empresa/novo\")}>Adicionar empresa</Button>\r\n                <Table\r\n                    title='Empresas cadastradas'\r\n                    data={dataSource}\r\n                    limit={limit}\r\n                    columns={[\r\n                        { name: 'id', header: '#', type: 'number', defaultWidth: 5, defaultVisible: false, defaultFlex: 0.5},\r\n                        { name: 'cnpj', header: 'CNPJ', defaultWidth: 30, defaultFlex: 1.5},\r\n                        { name: 'companyName', header: 'Nome', defaultWidth: 50, defaultFlex: 3},\r\n                        { name: 'tradeName', header: 'Nome Fantasia/Filial', defaultWidth: 50, defaultFlex: 4},\r\n                        { name: 'city', header: 'Cidade', defaultWidth: 10, defaultFlex: 3},\r\n                        { name: 'stateAbbr', defaultFlex: 0.75, header: 'UF', defaultWidth: 5},\r\n                        {\r\n                          name: 'isActive',\r\n                          defaultFlex: 1,\r\n                          header: 'Ativo',\r\n                          filterType: 'select',\r\n                          filterEditorProps: {\r\n                            placeholder: 'Todos',\r\n                            dataSource: isActiveLOV,\r\n                          },\r\n                          render: companyActiveRender,\r\n                        },\r\n                        {\r\n                            name: 'action',\r\n                            header: '',\r\n                            width: 20,\r\n                            defaultFlex: 0.25,\r\n                            render: ({ data }) => <ActionComponent data={data} />,\r\n                            sortable: false,\r\n                        },\r\n                    ]}\r\n                    defaultFilterValues={defaultFilterValues}\r\n                    sortable\r\n                    pagination={true}\r\n                    onFilterValueChange={setNewFilterValue}\r\n                    onLimitChange={setLimit}\r\n                />\r\n            </Col>\r\n        </PageView>\r\n    )\r\n}\r\n\r\nexport default Empresa\r\n","import COMBO_TYPES from 'redux/types/combos'\nimport api from 'services/api'\n\nconst loadAllCombos = () => {\n  return dispatch => {\n    api.get(\"common/combos\").then(response => {\n      dispatch({\n        type: COMBO_TYPES.LOAD_ALL,\n        data: response.data\n      })\n    }).catch(err => {\n      if(err && err.response) {\n        if(err.response.data) {\n          console.log(err.response.data)\n        }\n      }\n    })\n  }\n}\n\nconst loadCitiesFromState = stateId => {\n  return dispatch => {\n    api.get(`common/cities`, {params: {stateId}}).then(response => {\n      dispatch({\n        type: COMBO_TYPES.LOAD_CITIES_FROM_STATE,\n        citiesList: response.data\n      })\n    })\n  }\n}\n\nexport {loadAllCombos, loadCitiesFromState}\n","import { FormControlLabel, Grid, Switch } from \"@material-ui/core\"\nimport { FormDropdown, FormInput, FormSubmit, PageView, Text } from \"components/YeyComponents\"\nimport React, { useCallback, useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { loadAllCombos, loadCitiesFromState } from \"redux/actions/combos\"\nimport { clearAll, createCompany, getCompanyById, updateCompany } from \"redux/actions/company\"\nimport api from 'services/api'\nimport toast from \"react-hot-toast\"\nimport errorHandler from 'utils/errorHandler'\n\nconst EmpresaForm = () => {\n    const { handleSubmit, control, formState: { errors }, reset, setValue } = useForm()\n    const companyData = useSelector(state => state.company)\n    const statesList = useSelector(state => state.combos.statesList),\n        citiesList = useSelector(state => state.combos.citiesList),\n        companiesList = useSelector(state => state.combos.companiesList)\n    const dispatch = useDispatch()\n    const params = useParams()\n    const history = useHistory()\n\n    const [switchActive, setSwitchActive] = useState(false)\n\n    useEffect(() => dispatch(loadAllCombos()), [dispatch])\n\n    useEffect(() => {\n        if (params?.companyId) {\n            dispatch(getCompanyById(params.companyId))\n        } else {\n            dispatch(clearAll())\n        }\n    }, [dispatch, params])\n\n    useEffect(() => {\n        if (companyData?.stateId) {\n            Object.entries(companyData).forEach(([key, value]) => {\n              if(key === 'isActive') {\n                setSwitchActive(value)\n              }\n              setValue(key, value)\n            })\n            dispatch(loadCitiesFromState(companyData?.stateId))\n        } else {\n            reset(companyData)\n        }\n    }, [companyData, setValue, dispatch, reset])\n\n    const getCitiesByStateId = useCallback(state => {\n        dispatch(loadCitiesFromState(state.value))\n        setValue(\"stateId\", state.value)\n    }, [dispatch, setValue])\n\n    const selectCity = useCallback(city => {\n        setValue(\"cityId\", city.value)\n    }, [setValue])\n\n    const selectParentCompany = useCallback(parentCompany => {\n        setValue(\"parentCompanyId\", parentCompany.value)\n    }, [setValue])\n\n    const handleSwitch = evt => {\n      setSwitchActive(evt.target.checked)\n      setValue(\"isActive\", evt.target.checked)\n    }\n\n    const onSubmit = data => {\n        delete data.createdAt\n        delete data.updatedAt\n        data.isActive = params?.companyId ? data.isActive : true\n        dispatch(params?.companyId ? updateCompany(data) : createCompany(data, history.push))\n    }\n\n    const getCepChange = useCallback(state => {\n        if (state && state.length === 9) {\n            api.get(`common/cep/${state}`)\n                .then(async response => {\n                    const { data } = response\n\n                    setValue('cep', data?.cep)\n                    setValue('complement', data?.complement)\n                    setValue('district', data?.district)\n                    setValue('stateId', data?.state?.id)\n                    await dispatch(loadCitiesFromState(data?.state?.id))\n                    setValue('cityId', data?.city?.id)\n                    setValue('street', data?.street)\n                })\n                .catch(err => toast.error(`Erro ao encontrar CEP: ${errorHandler(err)}`))\n        }\n    }, [dispatch, setValue])\n\n    return (\n        <PageView>\n            <Text type='title' padding={{ top: '1em' }}>{params?.companyId ? 'Editar' : 'Adicionar'} Empresa</Text>\n            <hr style={{ marginTop: '2em' }} />\n\n            <form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%', flex: 1 }}>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='companyName'\n                            label='Razão Social'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.companyName}\n                            required\n                        />\n                        <FormInput\n                            name='tradeName'\n                            label='Nome Fantasia'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.tradeName}\n                        />\n                    </Grid>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='cnpj'\n                            label='CNPJ'\n                            mask='cnpj'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.companyName}\n                            required\n                        />\n                        <FormInput\n                            name='ie'\n                            label='Inscrição Estadual'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.tradeName}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\n                    <FormDropdown\n                        placeholder='Pesquisa a empresa...'\n                        name='parentCompanyId'\n                        label='Empresa Matriz'\n                        values={new Array(...[{ label: 'A própria', value: null }, ...companiesList.filter(c => Number(c.value) !== Number(params?.companyId))])}\n                        control={control}\n                        errors={errors}\n                        getChangeValue={e => selectParentCompany(e)}\n                        width=\"70%\"\n                    />\n                    <FormInput\n                        name='defaultSupervisor'\n                        label='Nome do supervisor de estágio'\n                        control={control}\n                        errors={errors}\n                        defaultValue={companyData?.defaultSupervisor}\n                    />\n                </Grid>\n\n                <hr style={{ marginTop: '2em' }} />\n                <Text fontWeight='bold' padding={{ top: '1em', bottom: '1em' }}>Endereço</Text>\n\n                <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\n                    <FormInput\n                        name='zipcode'\n                        label='CEP'\n                        mask='cep'\n                        control={control}\n                        errors={errors}\n                        defaultValue={companyData?.zipcode}\n                        getChangeValue={e => getCepChange(e)}\n                        required\n                    />\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='street'\n                            label='Logradouro'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.street}\n                            required\n                        />\n                        <FormInput\n                            name='number'\n                            label='Número'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.number}\n                            required\n                        />\n                        <FormDropdown\n                            placeholder='Pesquisa o estado...'\n                            name='stateId'\n                            label='Estado'\n                            required\n                            values={statesList}\n                            control={control}\n                            errors={errors}\n                            getChangeValue={e => getCitiesByStateId(e)}\n                            width=\"70%\"\n                        />\n                    </Grid>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='district'\n                            label='Bairro/Distrito'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.number}\n                            required\n                        />\n                        <FormInput\n                            name='complement'\n                            label='Complemento'\n                            control={control}\n                            errors={errors}\n                            defaultValue={companyData?.street}\n                        />\n                        <FormDropdown\n                            placeholder='Pesquisa a cidade...'\n                            name='cityId'\n                            label='Cidade'\n                            required\n                            control={control}\n                            errors={errors}\n                            values={citiesList}\n                            getChangeValue={e => selectCity(e)}\n                            width=\"70%\"\n                        />\n                    </Grid>\n                    {\n                      params?.companyId &&\n                      <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\">\n                        <FormControlLabel\n                          style={{marginTop: '2em', border: '2px solid black', width: '65%', padding: '1em', borderRadius: '20px'}}\n                          label=\"Empresa Ativa\"\n                          labelPlacement=\"end\"\n                          control={<Switch\n                            checked={switchActive}\n                            onChange={e => handleSwitch(e)}\n                            color=\"primary\"\n                            name=\"isActive\"\n                            control={control}\n                          />}\n                        />\n                      </Grid>\n                    }\n                </Grid>\n                <FormSubmit label=\"Salvar\" padding={{ top: '2em' }} />\n            </form>\n\n        </PageView>\n    )\n}\n\nexport default EmpresaForm\n","import toast from 'react-hot-toast'\nimport COMPANY_TYPES from 'redux/types/company'\nimport api from 'services/api'\nimport errorHandler from 'utils/errorHandler'\n\nconst createCompany = (company, redirectOnSuccess) => {\n  return dispatch => {\n    let toastId = toast.loading(`Criando nova empresa... `)\n    api.put(`company`, company).then(response => {\n      dispatch({\n        type: COMPANY_TYPES.CREATE,\n        company\n      })\n      toast.success(`Empresa criada com sucesso. `)\n      redirectOnSuccess(\"/menu/cadastro/empresa\")\n    })\n    .catch(err => toast.error(`Erro ao criar empresa: ${errorHandler(err)}`))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst updateCompany = company => {\n  return dispatch => {\n    let toastId = toast.loading(`Atualizando empresa... `)\n    api.put(`company`, company).then(response => {\n      dispatch({\n        type: COMPANY_TYPES.UPDATE,\n        company\n      })\n      toast.success(`Empresa atualizada com sucesso. `)\n    })\n    .catch(err => toast.error(`Erro ao atualizar empresa: ${errorHandler(err)}`))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst getCompanyById = companyId => {\n  return dispatch => {\n    let toastId = toast.loading(`Obtendo dados da empresa... `)\n    api.get(`company/${companyId}`).then(response => {\n      console.log(response.data[0])\n      dispatch({\n        type: COMPANY_TYPES.GET_BY_ID,\n        company: response.data\n      })\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst clearAll = () => {\n  return dispatch => {\n    dispatch({\n      type: COMPANY_TYPES.CLEAR\n    })\n  }\n}\n\nexport {createCompany, updateCompany, getCompanyById, clearAll}\n","import React from \"react\"\r\nimport { Switch } from \"react-router-dom\"\r\n\r\nimport DefaultRoute from \"routes/defaultRoute\"\r\n\r\nimport Empresa from \"pages/private/cadastro/empresa\"\r\nimport EmpresaForm from \"pages/private/cadastro/empresa/form\"\r\n\r\n\r\nconst EmpresaRoutes = ({match}) => {\r\n  const PARENT_PATH = match.url || \"\"\r\n  return (\r\n    <Switch>\r\n      <DefaultRoute exact path={PARENT_PATH} component={Empresa} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/novo\"} component={EmpresaForm} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/:companyId\"} component={EmpresaForm} />\r\n      <DefaultRoute />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default EmpresaRoutes\r\n","import React, { useState, useCallback, memo } from \"react\"\r\nimport { Text, Col, PageView, Table, Button } from 'components/YeyComponents'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport api from 'services/api'\r\nimport { isActiveLOV, paginationLimit, queryParamsConstructor } from 'utils/Utils'\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Menu, MenuItem } from \"@material-ui/core\"\r\n\r\nconst Escola = () => {\r\n    const defaultFilterValues = [\r\n        { name: 'schoolName', operator: 'contains', type: 'string' },\r\n        { name: 'isActive', operator: 'eq', type: 'string' },\r\n    ]\r\n\r\n    const [newFilterValue, setNewFilterValue] = useState(defaultFilterValues)\r\n    const [limit, setLimit] = useState(paginationLimit)\r\n    const history = useHistory()\r\n\r\n    const loadData = (props = {}) => {\r\n        const { skip = 0, sortInfo = \"\", groupBy = \"\", filterValue = newFilterValue } = props\r\n\r\n        const queryParams = queryParamsConstructor({ limit, skip, sortInfo, groupBy, filterValue })\r\n\r\n\r\n        return api.get(\"schools\", { params: queryParams }).then(response => {\r\n            const totalCount = response?.data?.total\r\n            return {\r\n                data: response?.data?.schools?.map(c => {\r\n                    return c\r\n                }),\r\n                count: totalCount * 1\r\n            }\r\n        })\r\n    }\r\n\r\n    const dataSource = useCallback(loadData, [newFilterValue, limit])\r\n\r\n    const schoolActiveRender = useCallback(({ value }) => {\r\n      if (value) return 'Sim'\r\n      else return 'Não'\r\n  }, [])\r\n\r\n    const ActionComponent = memo(({ data }) => {\r\n        const [isMenuVisible, setIsMenuVisible] = useState(null)\r\n\r\n        const handleClick = (event) => {\r\n            setIsMenuVisible(event?.currentTarget)\r\n        }\r\n\r\n        const handleClose = () => {\r\n            setIsMenuVisible(false)\r\n        }\r\n\r\n        const editSchool = () => {\r\n            setIsMenuVisible(false)\r\n            history.push(`/menu/cadastro/escola/${data?.id}`)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div id=\"action\" onClick={handleClick}>\r\n                    <BsThreeDotsVertical size={20} />\r\n                </div>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={isMenuVisible}\r\n                    keepMounted\r\n                    open={Boolean(isMenuVisible)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={editSchool}>Editar Escola</MenuItem>\r\n                </Menu>\r\n            </>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <PageView>\r\n            <Col align={{ horizontal: 'flex-start' }} flex={1} height='99%'>\r\n                <Text\r\n                    type='title'\r\n                    color={colors.darkGrey}\r\n                >\r\n                  Escolas\r\n                </Text>\r\n                <Button style='submit' viewStyle={{ padding: { bottom: '1em' }, align: 'flex-start' }} onClickFunction={() => history.push(\"/menu/cadastro/escola/novo\")}>Adicionar escola</Button>\r\n                <Table\r\n                    title='Escolas cadastradas'\r\n                    data={dataSource}\r\n                    limit={limit}\r\n                    columns={[\r\n                        { name: 'id', header: '#', type: 'number', defaultWidth: 80, defaultVisible: false, defaultFlex: 0.35},\r\n                        { name: 'schoolName', defaultFlex: 5, header: 'Nome', },\r\n                        { name: 'city', defaultFlex: 2, header: 'Cidade', },\r\n                        { name: 'stateAbbr', defaultFlex: 1, header: 'UF', },\r\n                        {\r\n                           name: 'isActive',\r\n                           defaultFlex: 1,\r\n                           header: 'Ativo',\r\n                           filterType: 'select',\r\n                            filterEditorProps: {\r\n                            placeholder: 'Todos',\r\n                            dataSource: isActiveLOV,\r\n                          },\r\n                          render: schoolActiveRender,\r\n                        },\r\n                        {\r\n                            name: 'action',\r\n                            header: '',\r\n                            width: 20,\r\n                            defaultFlex: 0.35,\r\n                            render: ({ data }) => <ActionComponent data={data} />,\r\n                            sortable: false,\r\n                        },\r\n                    ]}\r\n                    defaultFilterValues={defaultFilterValues}\r\n                    sortable\r\n                    pagination={true}\r\n                    onFilterValueChange={setNewFilterValue}\r\n                    onLimitChange={setLimit}\r\n                />\r\n            </Col>\r\n        </PageView>\r\n    )\r\n}\r\n\r\nexport default Escola\r\n","import { FormControlLabel, Grid, Switch } from \"@material-ui/core\"\nimport { FormDropdown, FormInput, FormSubmit, PageView, Text } from \"components/YeyComponents\"\nimport React, { useCallback, useEffect, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { loadAllCombos, loadCitiesFromState } from \"redux/actions/combos\"\nimport { createSchool, getSchool, updateSchool, clearAll } from \"redux/actions/school\"\nimport api from 'services/api'\nimport toast from \"react-hot-toast\"\nimport errorHandler from 'utils/errorHandler'\n\nconst EscolaForm = () => {\n    const { handleSubmit, control, formState: { errors }, reset, setValue } = useForm()\n    const schoolData = useSelector(state => state.school)\n    const statesList = useSelector(state => state.combos.statesList),\n        citiesList = useSelector(state => state.combos.citiesList)\n\n    const dispatch = useDispatch()\n    const params = useParams()\n    const history = useHistory()\n\n    const [switchActive, setSwitchActive] = useState(false)\n\n    useEffect(() => dispatch(loadAllCombos()), [dispatch])\n\n    useEffect(() => {\n        if (params?.schoolId) {\n            dispatch(getSchool(params.schoolId))\n        } else {\n            dispatch(clearAll())\n        }\n    }, [dispatch, params])\n\n    useEffect(() => {\n        if (schoolData?.stateId) {\n            Object.entries(schoolData).forEach(([key, value]) => {\n              if(key === 'isActive') {\n                setSwitchActive(value)\n              }\n              setValue(key, value)\n            })\n            dispatch(loadCitiesFromState(schoolData?.stateId))\n        } else {\n            reset(schoolData)\n        }\n    }, [schoolData, setValue, dispatch, reset])\n\n    const getCitiesByStateId = useCallback(state => {\n        dispatch(loadCitiesFromState(state.value))\n        setValue(\"stateId\", state.value)\n    }, [dispatch, setValue])\n\n    const selectCity = useCallback(city => {\n        setValue(\"cityId\", city.value)\n    }, [setValue])\n\n    const handleSwitch = evt => {\n      setSwitchActive(evt.target.checked)\n      setValue(\"isActive\", evt.target.checked)\n    }\n\n    const onSubmit = data => {\n      delete data.createdAt\n      delete data.updatedAt\n      data.isActive = params?.schoolId ? data.isActive : true\n      dispatch(params?.schoolId ? updateSchool(data) : createSchool(data, history.push))\n    }\n\n    const getCepChange = useCallback(state => {\n        if (state && state.length === 9) {\n            api.get(`common/cep/${state}`)\n                .then(async response => {\n                    const { data } = response\n\n                    setValue('cep', data?.cep)\n                    setValue('complement', data?.complement)\n                    setValue('district', data?.district)\n                    setValue('stateId', data?.state?.id)\n                    await dispatch(loadCitiesFromState(data?.state?.id))\n                    setValue('cityId', data?.city?.id)\n                    setValue('street', data?.street)\n                })\n                .catch(err => toast.error(`Erro ao encontrar CEP: ${errorHandler(err)}`))\n        }\n    }, [dispatch, setValue])\n\n\n    return (\n        <PageView>\n            <Text type='title' padding={{ top: '1em' }}>{params?.schoolId ? 'Editar' : 'Adicionar'} Escola</Text>\n            <hr style={{ marginTop: '2em' }} />\n\n            <form style={{ width: '100%', flex: 1 }} onSubmit={handleSubmit(onSubmit)}>\n                {/* <Grid  direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1} > */}\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='name'\n                            label='Nome da Escola'\n                            control={control}\n                            errors={errors}\n                            defaultValue={schoolData?.name}\n                            required\n                        />\n                    </Grid>\n                </Grid>\n\n                <hr style={{ marginTop: '2em' }} />\n                <Text fontWeight='bold' padding={{ top: '1em', bottom: '1em' }}>Endereço</Text>\n\n                <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\n                    <FormInput\n                        name='zipcode'\n                        label='CEP'\n                        mask='cep'\n                        control={control}\n                        errors={errors}\n                        defaultValue={schoolData?.zipcode}\n                        getChangeValue={e => getCepChange(e)}\n                        required\n                    />\n                </Grid>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='street'\n                            label='Logradouro'\n                            control={control}\n                            errors={errors}\n                            defaultValue={schoolData?.street}\n                            required\n                        />\n                        <FormInput\n                            name='number'\n                            label='Número'\n                            control={control}\n                            errors={errors}\n                            defaultValue={schoolData?.number}\n                            required\n                        />\n                        <FormDropdown\n                            placeholder='Pesquisa o estado...'\n                            name='stateId'\n                            label='Estado'\n                            required\n                            values={statesList}\n                            control={control}\n                            errors={errors}\n                            getChangeValue={e => getCitiesByStateId(e)}\n                            width=\"70%\"\n                        />\n                    </Grid>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <FormInput\n                            name='district'\n                            label='Bairro/Distrito'\n                            control={control}\n                            errors={errors}\n                            defaultValue={schoolData?.number}\n                            required\n                        />\n                        <FormInput\n                            name='complement'\n                            label='Complemento'\n                            control={control}\n                            errors={errors}\n                            defaultValue={schoolData?.street}\n                        />\n                        <FormDropdown\n                            placeholder='Pesquisa a cidade...'\n                            name='cityId'\n                            label='Cidade'\n                            required\n                            control={control}\n                            errors={errors}\n                            values={citiesList}\n                            getChangeValue={e => selectCity(e)}\n                            width=\"70%\"\n                        />\n                    </Grid>\n                    {\n                      params?.schoolId &&\n                      <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\">\n                        <FormControlLabel\n                          style={{marginTop: '2em', border: '2px solid black', width: '65%', padding: '1em', borderRadius: '20px'}}\n                          label=\"Escola Ativa\"\n                          labelPlacement=\"end\"\n                          control={<Switch\n                            checked={switchActive}\n                            onChange={e => handleSwitch(e)}\n                            color=\"primary\"\n                            name=\"isActive\"\n                            control={control}\n                          />}\n                        />\n                      </Grid>\n                    }\n                </Grid>\n                <FormSubmit label=\"Salvar\" padding={{ top: '2em' }} />\n                {/* </Grid> */}\n            </form>\n        </PageView>\n    )\n}\n\nexport default EscolaForm\n","import toast from 'react-hot-toast'\nimport SCHOOL_TYPES from 'redux/types/school'\nimport api from 'services/api'\nimport errorHandler from 'utils/errorHandler'\n\nconst createSchool = (school, redirectOnSuccess) => {\n  return dispatch => {\n    let toastId = toast.loading(`Criando escola... `)\n    api.put(\"school\", school).then(response => {\n      dispatch({\n        type: SCHOOL_TYPES.CREATE_SCHOOL,\n      })\n      toast.success(`Escola criada com sucesso. `)\n      redirectOnSuccess(\"/menu/cadastro/escola\")\n    })\n    .catch(err => toast.error(`Erro ao criar escola: ${errorHandler(err)}`))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst updateSchool = school => {\n  return dispatch => {\n    let toastId = toast.loading(`Atualizando escola... `)\n    api.put(\"school\", school).then(response => {\n      dispatch({\n        type: SCHOOL_TYPES.UPDATE_SCHOOL,\n      })\n      toast.success(`Escola atualizada com sucesso. `)\n    })\n    .catch(err => toast.error(`Erro ao atualizar escola: ${errorHandler(err)}`))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst getSchool = schoolId => {\n  return dispatch => {\n    let toastId = toast.loading(`Obtendo dados da escola... `)\n    api.get(`school/${schoolId}`).then(response => {\n      dispatch({\n        type: SCHOOL_TYPES.GET_SCHOOL,\n        school: response.data\n      })\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst clearAll = () => {\n  return dispatch => {\n    dispatch({\n      type: SCHOOL_TYPES.CLEAR\n    })\n  }\n}\n\nexport {createSchool, updateSchool, getSchool, clearAll}\n","import React from \"react\"\r\nimport DefaultRoute from \"routes/defaultRoute\"\r\n\r\nimport Escola from \"pages/private/cadastro/escola\"\r\nimport { Switch } from \"react-router-dom\"\r\nimport EscolaForm from \"pages/private/cadastro/escola/form\"\r\n\r\nconst EscolaRoutes = ({match}) => {\r\n  const PARENT_PATH = match.url || \"\"\r\n  return (\r\n    <Switch>\r\n      <DefaultRoute exact path={PARENT_PATH} component={Escola} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/novo\"} component={EscolaForm} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/:schoolId\"} component={EscolaForm} />\r\n      <DefaultRoute />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default EscolaRoutes\r\n","import React, { useState, useCallback, memo } from \"react\"\r\nimport { Text, Col, PageView, Table, Button } from 'components/YeyComponents'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport api from 'services/api'\r\nimport { isActiveLOV, paginationLimit, queryParamsConstructor } from 'utils/Utils'\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Menu, MenuItem } from \"@material-ui/core\"\r\n\r\nconst Usuario = () => {\r\n    const defaultFilterValues = [\r\n        { name: 'name', operator: 'contains', type: 'string' },\r\n        { name: 'username', operator: 'contains', type: 'string' },\r\n        { name: 'email', operator: 'contains', type: 'string' },\r\n        { name: 'isActive', operator: 'eq', type: 'string' },\r\n    ]\r\n\r\n    const [newFilterValue, setNewFilterValue] = useState(defaultFilterValues)\r\n    const [limit, setLimit] = useState(paginationLimit)\r\n    const history = useHistory()\r\n\r\n    const loadData = (props = {}) => {\r\n        const { skip = 0, sortInfo = \"\", groupBy = \"\", filterValue = newFilterValue } = props\r\n\r\n        const queryParams = queryParamsConstructor({ limit, skip, sortInfo, groupBy, filterValue })\r\n\r\n        return api.get(\"users\", { params: queryParams }).then(response => {\r\n          console.log(response.data.users)\r\n            const totalCount = response?.data?.total\r\n            return {\r\n                data: response?.data?.users?.map(c => {\r\n                    return c\r\n                }),\r\n                count: totalCount * 1\r\n            }\r\n        })\r\n    }\r\n\r\n    const dataSource = useCallback(loadData, [newFilterValue, limit])\r\n\r\n    const ActionComponent = memo(({ data }) => {\r\n        const [isMenuVisible, setIsMenuVisible] = useState(null)\r\n\r\n        const handleClick = (event) => {\r\n            setIsMenuVisible(event?.currentTarget)\r\n        }\r\n\r\n        const handleClose = () => {\r\n            setIsMenuVisible(false)\r\n        }\r\n\r\n        const editUser = () => {\r\n            setIsMenuVisible(false)\r\n            history.push(`/menu/cadastro/usuario/${data?.id}`)\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <div id=\"action\" onClick={handleClick}>\r\n                    <BsThreeDotsVertical size={20} />\r\n                </div>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={isMenuVisible}\r\n                    keepMounted\r\n                    open={Boolean(isMenuVisible)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={editUser}>Editar Usuário</MenuItem>\r\n                </Menu>\r\n            </>\r\n        )\r\n    })\r\n\r\n    const userActiveRender = useCallback(({ value }) => {\r\n        if (value) return 'Sim'\r\n        else return 'Não'\r\n    }, [])\r\n\r\n    const userRoleRender = useCallback(({ value }) => {\r\n        switch (value) {\r\n            case 'admin':\r\n                return 'Administrador'\r\n            case 'support':\r\n                return 'Suporte'\r\n        }\r\n    }, [newFilterValue, limit])\r\n\r\n    return (\r\n        <PageView>\r\n            <Col align={{ horizontal: 'flex-start' }} flex={1} height='99%'>\r\n                <Text\r\n                    type='title'\r\n                    color={colors.darkGrey}\r\n                >\r\n                    Usuários\r\n                </Text>\r\n                <Button style='submit' viewStyle={{ padding: { bottom: '1em' }, align: 'flex-start' }} onClickFunction={() => history.push(\"/menu/cadastro/usuario/novo\")}>Adicionar Usuário</Button>\r\n                <Table\r\n                    title='Usuários cadastrados'\r\n                    data={dataSource}\r\n                    limit={limit}\r\n                    columns={[\r\n                        { name: 'username', defaultFlex: 0.5, header: 'Usuário', },\r\n                        { name: 'name', defaultFlex: 1, header: 'Nome', },\r\n                        { name: 'email', defaultFlex: 1, header: 'E-mail', },\r\n                        {\r\n                          name: 'role',\r\n                          defaultFlex: 1,\r\n                          header: 'Cargo',\r\n                          render: userRoleRender,\r\n                        },\r\n                        {\r\n                            name: 'isActive',\r\n                            defaultFlex: 0.25,\r\n                            header: 'Ativo',\r\n                            render: userActiveRender,\r\n                            filterType: 'select',\r\n                            filterEditorProps: {\r\n                              placeholder: 'Todos',\r\n                              dataSource: isActiveLOV,\r\n                            }\r\n                        },\r\n                        {\r\n                            name: 'action',\r\n                            header: '',\r\n                            width: 20,\r\n                            render: ({ data }) => <ActionComponent data={data} />,\r\n                            sortable: false,\r\n                        },\r\n                    ]}\r\n                    defaultFilterValues={defaultFilterValues}\r\n                    sortable\r\n                    pagination={true}\r\n                    onFilterValueChange={setNewFilterValue}\r\n                    onLimitChange={setLimit}\r\n                />\r\n            </Col>\r\n        </PageView>\r\n    )\r\n}\r\n\r\nexport default Usuario\r\n","import { FormControlLabel, Grid, Switch } from \"@material-ui/core\"\nimport { FormInput, FormSubmit, PageView, Text } from \"components/YeyComponents\"\nimport React, { useEffect, useRef, useState } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { getUser, clearAll, createUser, updateUserOther } from \"redux/actions/user\"\n\nconst UsuarioForm = () => {\n  const {handleSubmit, control, formState: { errors }, reset, setValue } = useForm()\n  const userData = useSelector(state => state.user)\n  const [switchActive, setSwitchActive] = useState(false)\n  const password = useRef('')\n  const dispatch = useDispatch()\n  const params = useParams()\n  const history = useHistory()\n\n  useEffect(() => {\n    if(params?.userId) {\n      dispatch(getUser(params.userId))\n    } else {\n      dispatch(clearAll())\n    }\n  }, [dispatch, params])\n\n  useEffect(() => {\n    if(userData?.id) {\n      Object.entries(userData).forEach(([key, value]) => {\n        if(key === 'isActive') {\n          setSwitchActive(value)\n        }\n        setValue(key, value)\n      })\n    } else {\n      reset(userData)\n    }\n  }, [userData, setValue, dispatch, reset])\n\n  const handleSwitch = evt => {\n    setSwitchActive(evt.target.checked)\n    setValue(\"isActive\", evt.target.checked)\n  }\n\n  const onSubmit = data => {\n    delete data.createdAt\n    delete data.updatedAt\n    data.isActive = params?.userId ? data.isActive : true\n    dispatch(params?.userId ? updateUserOther(data) : createUser(data, history.push))\n  }\n\n  return (\n    <PageView>\n      <Text type='title' padding={{ top: '1em' }}>{params?.userId ? 'Editar' : 'Adicionar'} Usuário</Text>\n      <hr style={{ marginTop: '2em' }} />\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container>\n          <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\n            <FormInput\n                name='username'\n                label='Nome de usuário'\n                control={control}\n                errors={errors}\n                defaultValue={userData?.username}\n                disabled={userData?.id}\n                required\n            />\n            <FormInput\n                name='name'\n                label='Nome'\n                control={control}\n                errors={errors}\n                defaultValue={userData?.name}\n                required\n            />\n            <FormInput\n                name='email'\n                label='E-mail'\n                control={control}\n                errors={errors}\n                defaultValue={userData?.email}\n                required\n            />\n            {\n              params?.userId &&\n                <FormControlLabel\n                  style={{marginTop: '2em', border: '2px solid black', width: '65%', padding: '1em', borderRadius: '20px'}}\n                  label=\"Usuário Ativo\"\n                  labelPlacement=\"end\"\n                  control={<Switch\n                    checked={switchActive}\n                    onChange={e => handleSwitch(e)}\n                    color=\"primary\"\n                    name=\"isActive\"\n                    control={control}\n                  />}\n                />\n            }\n          </Grid>\n          <Grid item xl={6} lg={6} md={12} sm={12} xs={12}>\n            <FormInput\n                name='password'\n                type=\"password\"\n                label='Senha'\n                control={control}\n                errors={errors}\n                defaultValue={''}\n                required={!params?.userId}\n                getChangeValue={(newValue) => password.current = newValue}\n            />\n            <FormInput\n                name='passwordConf'\n                type=\"password\"\n                label='Confirmar Senha'\n                control={control}\n                errors={errors}\n                defaultValue={''}\n                required={!params?.userId}\n                validate={{\n                    passwordMatch: v => {\n                      if(!v) return true\n                      return (v && v === password.current)\n                    },\n                }}\n            />\n            <FormSubmit label=\"Salvar\" padding={{ top: '2em' }} />\n          </Grid>\n        </Grid>\n      </form>\n    </PageView>\n  )\n}\n\nexport default UsuarioForm\n","import toast from 'react-hot-toast'\nimport AUTH_TYPES from 'redux/types/auth'\nimport USER_TYPES from 'redux/types/user'\nimport api from 'services/api'\nimport { extractDataFromJWTToken, setToken } from 'services/token'\nimport errorHandler from 'utils/errorHandler'\n\nconst createUser = (user, redirectOnSuccess) => {\n  return dispatch => {\n    let toastId = toast.loading(`Criando usuário... `)\n\n    api.post(\"user\", {...user, roleId: 1}).then(response => {\n      dispatch({\n        type: USER_TYPES.CREATE_USER,\n      })\n      toast.success(`Usuário criado com sucesso. `)\n      redirectOnSuccess(\"/menu/cadastro/usuario\")\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst updateUser = data => {\n  return dispatch => {\n    let toastId = toast.loading(`Atualizando dados de usuário... `)\n    const {id, password, name, email} = data\n    api.patch(\"user/self\", {id, name, email, password}).then(response => {\n      setToken(response.data.token)\n      dispatch({\n        type: AUTH_TYPES.UPDATE_USERDATA,\n        userData: extractDataFromJWTToken(response.data.token)\n      })\n      toast.success(`Dados atualizados com sucesso. `)\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst updateUserOther = data => {\n  return dispatch => {\n    let toastId = toast.loading(`Atualizando dados de usuário... `)\n    api.patch(\"user\", data).then(response => {\n      dispatch({\n        type: USER_TYPES.UPDATE_USER\n      })\n      toast.success(`Dados atualizados com sucesso. `)\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst getUser = userId => {\n  return dispatch => {\n    let toastId = toast.loading(`Obtendo dados do usuário... `)\n    api.get(`user/${userId}`).then(response => {\n      dispatch({\n        type: USER_TYPES.LOAD_USER,\n        user: response.data\n      })\n    })\n    .catch(err => toast.error(errorHandler(err)))\n    .finally(() => toast.dismiss(toastId))\n  }\n}\n\nconst clearAll = () => {\n  return dispatch => {\n    dispatch({\n      type: USER_TYPES.CLEAR\n    })\n  }\n}\n\nexport {updateUser, createUser, getUser, clearAll, updateUserOther}\n","import React from \"react\"\nimport DefaultRoute from \"routes/defaultRoute\"\n\nimport Usuario from \"pages/private/cadastro/usuario\"\nimport { Switch } from \"react-router-dom\"\nimport UsuarioForm from \"pages/private/cadastro/usuario/form\"\n\nconst UsuarioRoutes = ({match}) => {\n  const PARENT_PATH = match.url || \"\"\n  return (\n    <Switch>\n      <DefaultRoute exact path={PARENT_PATH} component={Usuario} />\n      <DefaultRoute exact path={PARENT_PATH + \"/novo\"} component={UsuarioForm} />\n      <DefaultRoute exact path={PARENT_PATH + \"/:userId\"} component={UsuarioForm} />\n      <DefaultRoute />\n    </Switch>\n  )\n}\n\nexport default UsuarioRoutes\n","const generateRoutePath = pathStringArray => {\r\n  let objectPath = {}\r\n  pathStringArray.forEach(str => objectPath[str.split(\"/\")[0]] = `/${str}`)\r\n  return objectPath\r\n}\r\n\r\nexport default generateRoutePath","import React from \"react\"\r\nimport { Switch } from \"react-router-dom\"\r\n\r\nimport DefaultRoute from \"routes/defaultRoute\"\r\nimport EmpresaRoutes from \"routes/private/cadastro/empresaRoutes\"\r\nimport EscolaRoutes from \"routes/private/cadastro/escolaRoutes\"\r\nimport UsuarioRoutes from \"routes/private/cadastro/usuarioRoutes\"\r\n\r\nimport generateRoutePath from \"utils/generateRoutePath\"\r\n\r\nconst CadastroRoutesGroup= ({match}) => {\r\n  const PARENT_PATH = match.url || \"\"\r\n  const routes = generateRoutePath([\"empresa\", \"escola\", \"usuario\"])\r\n  return (\r\n    <Switch>\r\n      <DefaultRoute path={PARENT_PATH + routes.empresa} component={EmpresaRoutes} />\r\n      <DefaultRoute path={PARENT_PATH + routes.escola} component={EscolaRoutes} />\r\n      <DefaultRoute path={PARENT_PATH + routes.usuario} component={UsuarioRoutes} />\r\n      <DefaultRoute />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default CadastroRoutesGroup","import React, { useState, useRef, useCallback, useEffect, memo } from \"react\"\r\nimport { Text, Col, Button, PageView, Table, Input, Dropdown, Dialog } from 'components/YeyComponents'\r\nimport { colors } from 'utils/StyleUtils'\r\nimport api from 'services/api'\r\nimport { statusLOV, paginationLimit, queryParamsConstructor } from 'utils/Utils'\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\"\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport { downloadContractObject, downloadCustomerEvaluationForm, downloadContractTerminationTerm, downloadContractDismissalLetter, } from 'redux/actions/report'\r\nimport { promiseUpdateContractStatus } from 'redux/actions/contract'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { loadAllCombos, } from \"redux/actions/combos\"\r\nimport toast from 'react-hot-toast'\r\nimport errorHandler from 'utils/errorHandler'\r\n\r\nconst Contrato = () => {\r\n    const location = useLocation()\r\n    const combos = useSelector(state => state.combos)\r\n    const defaultFilterValues = [\r\n        { name: 'id', operator: 'contains', type: 'string' },\r\n        { name: 'customerName', operator: 'contains', type: 'string' },\r\n        { name: 'companyName', operator: 'contains', type: 'string' },\r\n        { name: 'schoolName', operator: 'contains', type: 'string' },\r\n        { name: 'startDate', operator: 'eq', type: 'string' },\r\n        { name: 'endDate', operator: 'eq', type: 'string', value: location?.state?.defaultEndDateValue },\r\n        { name: 'status', operator: 'eq', type: 'string', value: location?.state?.defaultStatusValue },\r\n    ]\r\n    const [newFilterValue, setNewFilterValue] = useState(defaultFilterValues)\r\n    const [limit, setLimit] = useState(paginationLimit)\r\n    const [gridRef, setGridRef] = useState(null)\r\n\r\n    const [isEvaluationDialogVisible, setIsEvaluationDialogVisible] = useState(false)\r\n    const [isRevocationDialogVisible, setIsRevocationDialogVisible] = useState(false)\r\n    const [isStatusDialogVisible, setIsStatusDialogVisible] = useState(false)\r\n\r\n    let selectedContractId = useRef()\r\n    let selectedContractValue = useRef({ data: null, index: null, status: null })\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const loadData = (props = {}) => {\r\n        const { skip = 0, sortInfo = \"\", groupBy = \"\", filterValue = newFilterValue } = props\r\n\r\n        const queryParams = queryParamsConstructor({ limit, skip, sortInfo, groupBy, filterValue })\r\n\r\n        // queryParams.status = ['active', 'cancelled']\r\n        console.log('queryParams loadData', queryParams)\r\n\r\n        return api.get(\"contracts\", { params: queryParams }).then(response => {\r\n            const totalCount = response.data.total\r\n            console.log('Contracts result: ', response.data.contracts)\r\n            return {\r\n                data: response?.data?.contracts?.map(c => {\r\n                    c.wage = Number(c.wage).toLocaleString(\"pt-BR\", { minimumFractionDigits: 2 })\r\n                    c.status = c.status.label\r\n                    c.startDate = new Date(c?.startDate).toLocaleDateString('pt-BR')\r\n                    c.endDate = new Date(c?.endDate).toLocaleDateString('pt-BR')\r\n\r\n                    return c\r\n                }),\r\n                count: totalCount * 1\r\n            }\r\n        })\r\n    }\r\n\r\n    const dataSource = useCallback(loadData, [newFilterValue, limit])\r\n\r\n    const ActionComponent = memo(({ data }) => {\r\n        const [isMenuVisible, setIsMenuVisible] = useState(null)\r\n\r\n        const handleClick = (event) => {\r\n            setIsMenuVisible(event?.currentTarget)\r\n        }\r\n\r\n        const handleClose = () => {\r\n            setIsMenuVisible(false)\r\n        }\r\n\r\n        const downloadContract = () => {\r\n            setIsMenuVisible(false)\r\n            dispatch(downloadContractObject(data?.id))\r\n        }\r\n\r\n        const editContract = () => {\r\n            setIsMenuVisible(false)\r\n            // history.push(`contratos/editar/${data?.id}`)\r\n            history.push({ pathname: `contratos/${data?.id}` })\r\n        }\r\n\r\n        const generateReport = () => {\r\n            selectedContractId.current = data?.id\r\n            setIsMenuVisible(false)\r\n            setIsEvaluationDialogVisible(true)\r\n        }\r\n\r\n        const generateContractTerminationTerm = () => {\r\n            setIsMenuVisible(false)\r\n            dispatch(downloadContractTerminationTerm(data?.id))\r\n        }\r\n\r\n        const generateContractDismissalLetter = () => {\r\n            setIsMenuVisible(false)\r\n            dispatch(downloadContractDismissalLetter(data?.id))\r\n        }\r\n\r\n        const generateContractDismissalAndTermination = () => {\r\n            setIsMenuVisible(false)\r\n            dispatch(downloadContractDismissalLetter(data?.id))\r\n            dispatch(downloadContractTerminationTerm(data?.id))\r\n        }\r\n\r\n        let revokedStatusMenu = [\r\n            <MenuItem onClick={generateContractDismissalLetter}>Carta de Aviso</MenuItem>,\r\n            <MenuItem onClick={generateContractTerminationTerm}>Termo de Rescisão</MenuItem>,\r\n            <MenuItem onClick={generateContractDismissalAndTermination}>Rescisão/Aviso</MenuItem>,\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                <div id=\"action\" onClick={handleClick}>\r\n                    <BsThreeDotsVertical size={20} />\r\n                </div>\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={isMenuVisible}\r\n                    keepMounted\r\n                    open={Boolean(isMenuVisible)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={downloadContract}>Baixar Contrato</MenuItem>\r\n                    <MenuItem onClick={editContract}>Editar Contrato</MenuItem>\r\n                    <MenuItem onClick={generateReport}>Gerar Ficha de Avaliação</MenuItem>\r\n                    {\r\n                        data?.status === 'Rescindido' && revokedStatusMenu.map((value) => {\r\n                            return value\r\n                        })\r\n                    }\r\n                </Menu>\r\n            </>\r\n        )\r\n    })\r\n\r\n    const StatusDropdownComponent = memo(({ data, columnIndex, rowIndex }) => {\r\n        const [selectedStatus, setSelectedStatus] = useState({})\r\n        const [statusData, setStatusData] = useState([])\r\n\r\n        const refMainView = useRef()\r\n\r\n        useEffect(() => {\r\n            if (data?.status) {\r\n                const selectedStatusObject = statusLOV.find(element => element?.label === data?.status)\r\n                if (selectedStatusObject) {\r\n                    setSelectedStatus(selectedStatusObject)\r\n                }\r\n            }\r\n        }, [data])\r\n        console.log('statusLOV', statusLOV)\r\n\r\n        useEffect(() => {\r\n            let statusDataArray = []\r\n            if (selectedStatus?.acceptedValues && Array.isArray(selectedStatus?.acceptedValues) && selectedStatus?.acceptedValues?.length > 0) {\r\n                selectedStatus?.acceptedValues?.map((acceptedStatusValue) => {\r\n                    const foundStatus = statusLOV.find(({ value }) => value === acceptedStatusValue)\r\n                    statusDataArray.push(foundStatus)\r\n                })\r\n            }\r\n\r\n            setStatusData(statusDataArray)\r\n        }, [selectedStatus])\r\n\r\n        const onChangeStatus = (newValue) => {\r\n            console.log('onChangeStatus', onChangeStatus)\r\n            selectedContractValue.current = { ...selectedContractValue.current, index: rowIndex, status: newValue }\r\n            selectedContractId.current = data?.id\r\n\r\n            if (newValue?.value !== selectedStatus?.value) {\r\n                if (newValue?.value !== 'revoked') {\r\n                    setIsStatusDialogVisible(true)\r\n                }\r\n                else setIsRevocationDialogVisible(true)\r\n            }\r\n        }\r\n\r\n        console.log('gridRef', gridRef?.current)\r\n        console.log('bodyRef grid', gridRef?.current?.bodyRef?.current)\r\n        // console.log('bodyRef portalRef', gridRef?.current?.portalRef?.current?.domNode) // nao visivel\r\n        // console.log('bodyRef portalRef', gridRef?.current?.portalRef?.current?.offsetParent) // nao visivel\r\n        // console.log('bodyRef bodyRef', gridRef?.current?.domRef?.current) // nao resolve\r\n        // console.log('bodyRef document', document.body)\r\n        // parentElement\r\n        // parentNode\r\n\r\n        return (\r\n            <div id='divR' ref={refMainView}>\r\n                {selectedStatus && gridRef?.current?.bodyRef?.current &&\r\n                    <Dropdown\r\n                        width='100%'\r\n                        // values={statusLOV} // Testes para mudanca de status\r\n                        values={statusData}\r\n                        // selectedValues={\r\n                        //     statusData.filter(option =>\r\n                        //         option.label === data?.status)\r\n                        // }\r\n                        selectedValues={[selectedStatus]}\r\n                        onChangeValue={onChangeStatus}\r\n                        maxWidth='100%'\r\n                        minWidth='100%'\r\n                        flex={1}\r\n                        closeMenuOnSelect={true}\r\n                        menuPortalTarget={document.body}\r\n                        menuPosition='fixed'\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    })\r\n\r\n    const EvaluationDialog = () => {\r\n        const [avaliationInputText, setAvaliationInputText] = useState('')\r\n\r\n        const getInputValue = (newValue) => {\r\n            setAvaliationInputText(newValue?.target?.value)\r\n        }\r\n\r\n        const onSubmit = () => {\r\n            dispatch(downloadCustomerEvaluationForm(selectedContractId.current, avaliationInputText))\r\n            setIsEvaluationDialogVisible(false)\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                title='Ficha de Avaliação'\r\n                text='Insira no campo abaixo o periodo que deve ser passado para a ficha de avaliação'\r\n                isVisible={isEvaluationDialogVisible}\r\n                setIsVisible={setIsEvaluationDialogVisible}\r\n                onClick={onSubmit}\r\n                disabled={avaliationInputText.length == 0}\r\n            >\r\n                <Input value={avaliationInputText} onChangeValue={getInputValue} onChange={getInputValue} />\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    const statusChangeHandler = (revocationReason) => {\r\n        let revokedFlag = revocationReason ? true : false\r\n\r\n        let toastId = toast.loading(`Atualizando status do contrato...`)\r\n        const queryConfig = {\r\n            params: {\r\n                status: selectedContractValue.current?.status?.value,\r\n            }\r\n        }\r\n\r\n        // Enviado somente em casos onde acontece a rescisao do contrato (Porque o back ta de frescura)\r\n        if (revokedFlag) {\r\n            queryConfig.params.revocationReasonId = revocationReason\r\n        }\r\n        console.log('queryConfig', queryConfig)\r\n        api.patch(`contract/${selectedContractId.current}/status`, {}, queryConfig)\r\n            .then(response => {\r\n                console.log('updateContractStatus response', response)\r\n\r\n                toast.success(`Contrato ${revokedFlag ? 'rescindido' : 'atualizado'} com sucesso. `, response)\r\n\r\n                if (revokedFlag) setIsRevocationDialogVisible(false)\r\n                else setIsStatusDialogVisible(false)\r\n\r\n                gridRef?.current?.setItemAt(selectedContractValue.current?.index, { ...selectedContractValue.current?.data, status: selectedContractValue.current?.status?.label })\r\n            })\r\n            .catch(err => toast.error(`Erro ao atualizar valor: ${errorHandler(err)}`))\r\n            .finally(() => toast.dismiss(toastId))\r\n    }\r\n\r\n    const RevocationDialog = () => {\r\n        const [revocationReason, setRevocationReason] = useState(null)\r\n\r\n        const onSelectEvocation = (newValue) => {\r\n            setRevocationReason(newValue)\r\n        }\r\n\r\n        const onSubmit = () => {\r\n            console.log(revocationReason)\r\n            statusChangeHandler(revocationReason?.value)\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                title='Rescisão de contrato'\r\n                text='Selecione abaixo o motivo da rescisão do contrato'\r\n                isVisible={isRevocationDialogVisible}\r\n                setIsVisible={setIsRevocationDialogVisible}\r\n                onClick={onSubmit}\r\n                secondaryButtonOnClick={() => setIsRevocationDialogVisible(false)}\r\n                secondaryButton\r\n                buttonText='Alterar'\r\n                disabled={!revocationReason?.value}\r\n            >\r\n                <Dropdown\r\n                    width='100%'\r\n                    values={combos?.revocationReasonsList}\r\n                    selectedValues={[revocationReason]}\r\n                    onChangeValue={onSelectEvocation}\r\n                    maxWidth='100%'\r\n                    minWidth='100%'\r\n                    padding={{ top: '0.5em' }}\r\n                    flex={1}\r\n                    closeMenuOnSelect={true}\r\n                    menuPosition='fixed'\r\n                />\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    const StatusChangeConfirmationDialog = () => {\r\n        const onSubmit = () => {\r\n            statusChangeHandler(null)\r\n        }\r\n\r\n        return (\r\n            <Dialog\r\n                title='Mudança de Status'\r\n                text='Deseja alterar o status atual do contrato?'\r\n                isVisible={isStatusDialogVisible}\r\n                setIsVisible={setIsStatusDialogVisible}\r\n                onClick={onSubmit}\r\n                secondaryButtonOnClick={() => setIsStatusDialogVisible(false)}\r\n                secondaryButton\r\n                buttonText='Alterar'\r\n            >\r\n            </Dialog>\r\n        )\r\n    }\r\n\r\n    useEffect(() => dispatch(loadAllCombos()), [dispatch])\r\n\r\n    return (\r\n        <PageView>\r\n            <Col align={{ horizontal: 'flex-start', vertical: 'flex-start' }} flex={1} height='99%'>\r\n                <Text\r\n                    type='title'\r\n                    color={colors.darkGrey}\r\n                    padding={{ bottom: '1em' }}\r\n                >\r\n                    Contratos cadastrados\r\n                </Text>\r\n                <Button style='submit' viewStyle={{ padding: { bottom: '1em' }, align: 'flex-start' }} onClickFunction={() => history.push(\"contratos/novo\")}>Adicionar contrato</Button>\r\n                <Table\r\n                    data={dataSource}\r\n                    limit={limit}\r\n                    columns={[\r\n                        { name: 'id', header: '#', type: 'number', defaultFlex: 1, defaultVisible: false, },\r\n                        { name: 'customerName', defaultFlex: 4, header: 'Estagiário', },\r\n                        { name: 'companyName', defaultFlex: 4, header: 'Empresa', },\r\n                        { name: 'schoolName', defaultFlex: 4, header: 'Escola', },\r\n                        { name: 'wage', defaultFlex: 2, header: 'Valor da bolsa (R$)', },\r\n                        {\r\n                            name: 'startDate',\r\n                            defaultFlex: 2,\r\n                            filterType: 'date',\r\n                            header: 'Data de início',\r\n                        },\r\n                        {\r\n                            name: 'endDate',\r\n                            defaultFlex: 2,\r\n                            filterType: 'date',\r\n                            header: 'Data de término',\r\n                        },\r\n                        {\r\n                            name: 'status',\r\n                            defaultFlex: 4,\r\n                            filterType: 'select',\r\n                            // multiple: true,\r\n                            // wrapMultiple: false,\r\n                            filterEditorProps: {\r\n                                placeholder: 'Todos',\r\n                                dataSource: statusLOV,//combos?.status\r\n                            },\r\n                            header: 'Status',\r\n                            render: ({ data, columnIndex, rowIndex }) => <StatusDropdownComponent data={data} columnIndex={columnIndex} rowIndex={rowIndex} />\r\n                        },\r\n                        {\r\n                            name: 'action',\r\n                            width: 20,\r\n                            header: '',\r\n                            sortable: false,\r\n                            render: ({ data }) => <ActionComponent data={data} />,\r\n                        },\r\n                    ]}\r\n                    defaultFilterValues={defaultFilterValues}\r\n                    sortable\r\n                    pagination={true}\r\n                    onFilterValueChange={setNewFilterValue}\r\n                    onLimitChange={setLimit}\r\n                    showColumnMenuTool={true}\r\n                    showEmptyRows={true}\r\n                    editable={true}\r\n                    onReady={setGridRef}\r\n                />\r\n            </Col>\r\n\r\n            <EvaluationDialog />\r\n            <RevocationDialog />\r\n            <StatusChangeConfirmationDialog />\r\n        </PageView>\r\n    )\r\n}\r\n\r\nexport default Contrato\r\n","const BRLCurrencyConverter = value => { //Funciona até 1 quatrilhão de reais não inclusivo.\n  console.log(\"got \", value)\n  let newValue = null, str = value.replace(/\\./g, \"\").replace(/,/g,\"\").replace(/\\D/g, \"\")\n  if(str.length > 14) {\n    return \"0,00\"\n  } else {\n    if(str.length > 5) {\n      const strSplit = str.substring(0, str.length - 3)\n      const division = str.substring(str.length - 3, str.length)\n      newValue = `${strSplit}${division / 100}`\n    } else newValue = (Number(str) / 100).toString()\n    return Number(newValue).toLocaleString(\"pt-BR\", {minimumFractionDigits: 2})\n  }\n}\n\nexport default BRLCurrencyConverter\n","import React, { memo, useEffect, useRef, useState, useCallback } from 'react'\nimport { Text, Row, Col, PageView, Form, Input, DatePicker, errorMessage, FormInput, FormDataArray, FormDatePicker, FormDropdown, FormSubmit, } from 'components/YeyComponents'\nimport toast from \"react-hot-toast\"\nimport { useForm, Controller } from 'react-hook-form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { loadAllCombos, loadCitiesFromState } from 'redux/actions/combos'\nimport BRLCurrencyConverter from 'utils/BRLCurrencyConverter'\nimport { Grid, Typography } from \"@material-ui/core\"\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\nimport { getContractByID } from 'redux/actions/contract'\nimport api from 'services/api'\nimport errorHandler from 'utils/errorHandler'\nimport { statusLOV, } from 'utils/Utils'\nimport { parseISO } from 'date-fns'\n\nconst ContratoNovo = () => {\n  const { register, handleSubmit, control, watch, setValue, getValues, reset, formState: { errors } } = useForm()\n\n  const location = useLocation()\n  const params = useParams()\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const combos = useSelector(state => state.combos)\n  const statesList = useSelector(state => state.combos.statesList)\n  const citiesList = useSelector(state => state.combos.citiesList)\n  const revocationReasonsList = useSelector(state => state.combos.revocationReasonsList)\n\n  const [editFlag, setEditFlag] = useState(false)\n  const [readOnlyFlag, setReadOnlyFlag] = useState(false)\n  let workingSchedule = useRef({\n    weekDay1: 0,\n    weekDay2: 0,\n    weekDay3: 0,\n    weekDay4: 0,\n    weekDay5: 0,\n    weekDay6: 0,\n    weekDay7: 0,\n  })\n  let totalHoursCount = useRef(0)\n\n  const timeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  useEffect(() => dispatch(loadAllCombos()), [dispatch])\n\n  useEffect(() => {\n    async function fetchData() {\n      let formDataArray = []\n\n      let toastId = toast.loading(`Consultando contrato... `)\n      await api.get(`contract/${params?.contractId}`)\n        .then(async response => {\n          const { data } = response\n\n          console.log('getContractByID response', response)\n          console.log('getContractByID data', data)\n\n          // Dados do contrato\n          formDataArray.push({ name: 'id', value: data?.id })\n          formDataArray.push({ name: 'policyNumber', value: data?.policyNumber })\n          formDataArray.push({ name: 'supervisorName', value: data?.supervisorName })\n          formDataArray.push({ name: 'wage', value: data?.wage })\n          formDataArray.push({ name: 'startDate', value: parseISO(data?.startDate) })\n          formDataArray.push({ name: 'endDate', value: parseISO(data?.endDate) })\n\n          // Dados do estagiario\n          formDataArray.push({ name: 'name', value: data?.customer?.name })\n          formDataArray.push({ name: 'cpf', value: data?.customer?.cpfcnpj })\n          formDataArray.push({ name: 'rg', value: data?.customer?.rgie })\n          formDataArray.push({ name: 'birthDate', value: parseISO(data?.customer?.birthDate) })\n          formDataArray.push({ name: 'school', value: data?.schoolId })\n          formDataArray.push({ name: 'company', value: data?.companyId })\n          formDataArray.push({ name: 'insuranceCompany', value: data?.insuranceCompany })\n          formDataArray.push({ name: 'revocationReason', value: data?.revocationReasonId })\n          formDataArray.push({ name: 'status', value: data?.status })\n\n          // Dados de endereco\n          formDataArray.push({ name: 'district', value: data?.customer?.district })\n          formDataArray.push({ name: 'state', value: data?.customer?.stateId })\n          await dispatch(loadCitiesFromState(data?.customer?.stateId))\n          formDataArray.push({ name: 'city', value: data?.customer?.cityId })\n          formDataArray.push({ name: 'cep', value: data?.customer?.zipcode })\n          formDataArray.push({ name: 'complement', value: data?.customer?.complement })\n          formDataArray.push({ name: 'street', value: data?.customer?.street })\n          formDataArray.push({ name: 'number', value: data?.customer?.number })\n\n          let totalHoursCountHandler = 0\n\n          const countHandler = (acc = 0, { hours = 0 }) => {\n            console.log('countHandler', hours)\n            if (!isNaN(hours) && !isNaN(acc)) {\n              if (hours) return parseFloat(acc) + parseFloat(hours)\n              else return parseFloat(acc)\n            }\n            else {\n              return parseFloat(acc)\n            }\n          }\n\n          if (Array.isArray(data?.workingSchedule)) {\n            data?.workingSchedule.map(({ weekdayId, hours }) => {\n              const weekdayName = `weekDay${weekdayId}`\n              workingSchedule.current[weekdayName] = hours\n              formDataArray.push({ name: weekdayName, value: hours })\n            })\n\n            totalHoursCountHandler = data?.workingSchedule.reduce(countHandler, 0)\n            formDataArray.push({ name: 'totalHoursCount', value: totalHoursCountHandler })\n          }\n\n          setEditFlag(true)\n          if (data?.status !== 'awaiting_signature') setReadOnlyFlag(true)\n\n        })\n        .catch(err => toast.error(`Erro ao encontrar contrato: ${errorHandler(err)}`))\n        .finally(() => toast.dismiss(toastId))\n\n      console.log('formDataArray', formDataArray)\n      formDataArray.forEach((item, index) => {\n        setValue(item?.name, item?.value)\n      })\n    }\n    if (params?.contractId) {\n      fetchData()\n    }\n    else {\n      setEditFlag(false)\n      setReadOnlyFlag(false)\n      reset()\n      setValue(\"insuranceCompany\", combos?.insuranceData?.holder)\n      setValue(\"policyNumber\", combos?.insuranceData?.policyNumber)\n      Object.keys(workingSchedule.current).map((key, index) => {\n        workingSchedule.current[key] = 0\n      })\n    }\n\n  }, [combos?.insuranceData?.holder, combos?.insuranceData?.policyNumber, dispatch, params, reset, setValue])\n\n  const onSubmit = (data) => {\n    console.log('onSubmit data', editFlag, params?.contractId, data)\n    const payload = {\n      id: editFlag ? params?.contractId ? params?.contractId : data?.id : null,\n      customer: {\n        name: data?.name,\n        cpfcnpj: data?.cpf,\n        rgie: data?.rg,\n        zipcode: data?.cep,\n        street: data?.street,\n        number: data?.number,\n        complement: data?.complement,\n        district: data?.district,\n        cityId: data?.city,\n        stateId: data?.state,\n        birthDate: new Date(data?.birthDate).toLocaleDateString('fr-CA'),\n      },\n      workingSchedule: Object.entries(data).filter(([key]) => RegExp(/(^weekDay)+(\\d)$/).test(key)).map(([key, value]) => {\n        return {\n          weekdayId: Number(key.substring(key.length - 1)),\n          hours: Number(value) || 0\n        }\n      }),\n      startDate: new Date(data?.startDate).toLocaleDateString('fr-CA'),\n      endDate: new Date(data?.endDate).toLocaleDateString('fr-CA'),\n      wage: Number(data?.wage.replace(/,/g, \"\").replace(/\\./g, \"\")) / 100,\n      supervisorName: data?.supervisorName,\n      policyNumber: data?.policyNumber,\n      insuranceCompany: data?.insuranceCompany,\n      companyId: data?.company,\n      schoolId: data?.school,\n    }\n    console.log('onSubmit payload', payload)\n\n    let toastId = toast.loading(`${params?.contractId ? 'Atualizando' : 'Cadastrando'} contrato...`)\n\n    api.put('contract', payload)\n      .then(response => {\n        console.log('onSubmit response', response)\n\n        toast.success(`Contrato ${params?.contractId ? 'atualizado' : 'cadastrado'}  com sucesso.`, response)\n        setValue(\"id\", response?.data?.contractId)\n        setValue(\"status\", 'awaiting_signature')\n        // history.goBack()\n        setEditFlag(true)\n        //setValue('id', )\n        return response\n      })\n      .catch(err => toast.error(`Erro ao ${params?.contractId ? 'atualizar' : 'cadastrar'} contrato: ${errorHandler(err)}`))\n      .finally(() => toast.dismiss(toastId))\n  }\n\n  const [startDate, setStartDate] = useState(new Date())\n\n  //const handleCurrencyInput = evt => setCurrency(c => BRLCurrencyConverter(evt.target.value) || c)\n\n  const getCitiesByStateId = useCallback(state => {\n    dispatch(loadCitiesFromState(state.value))\n    setValue(\"state\", state.value)\n  }, [dispatch, setValue])\n\n  const getCepChange = useCallback(state => {\n    if (state && state.length === 9) {\n      api.get(`common/cep/${state}`)\n        .then(async response => {\n          const { data } = response\n\n          setValue('cep', data?.cep)\n          setValue('complement', data?.complement)\n          setValue('district', data?.district)\n          setValue('state', data?.state?.id)\n          await dispatch(loadCitiesFromState(data?.state?.id))\n          setValue('city', data?.city?.id)\n          setValue('street', data?.street)\n        })\n        .catch(err => toast.error(`Erro ao encontrar CEP: ${errorHandler(err)}`))\n      // .finally(() => toast.dismiss(toastId))\n    }\n  }, [dispatch, setValue])\n\n  const getHourChange = useCallback((newValue, name) => {\n    workingSchedule.current[name] = newValue\n    const countHandler = (acc = 0, hours = 0) => {\n      if (!isNaN(hours) && !isNaN(acc)) {\n        if (hours) return parseFloat(acc) + parseFloat(hours)\n        else return parseFloat(acc)\n      }\n      else {\n        return parseFloat(acc)\n      }\n    }\n    totalHoursCount.current = Object.values(workingSchedule.current).reduce(countHandler, 0)\n\n    setValue(\"totalHoursCount\", totalHoursCount.current)\n  }, [setValue, totalHoursCount])\n\n  const WeekDaysComponent = memo(({ control, errors, getHourChange }) => {\n    console.log('WeekDaysComponent')\n    return <Row padding={{ top: '1em' }} align={{ horizontal: 'flex-start', vertical: 'flex-start' }}>\n      <FormInput\n        name='weekDay1'\n        label='Segunda-feira'\n        type='weekDay'\n        control={control}\n        errors={errors}\n        padding={{ right: '2em' }}\n        getChangeValue={getHourChange}\n      />\n      <FormInput\n        name='weekDay2'\n        label='Terça-feira'\n        type='weekDay'\n        control={control}\n        errors={errors}\n        padding={{ right: '2em' }}\n        getChangeValue={getHourChange}\n      />\n      <FormInput\n        name='weekDay3'\n        label='Quarta-feira'\n        type='weekDay'\n        control={control}\n        errors={errors}\n        padding={{ right: '20' }}\n        getChangeValue={getHourChange}\n      />\n      <FormInput\n        name='weekDay4'\n        label='Quinta-feira'\n        type='weekDay'\n        control={control}\n        errors={errors}\n        padding={{ right: '20' }}\n        getChangeValue={getHourChange}\n      />\n    </Row>\n  })\n\n  return (\n    <PageView>\n      <Text type='title' padding={{ top: '1em' }}>Cadastro de contrato de estágio</Text>\n      <form onSubmit={handleSubmit(onSubmit)} style={{ width: '100%', flex: 1 }}>\n        {editFlag &&\n          <Grid container xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormInput\n              name='id'\n              label='ID'\n              control={control}\n              errors={errors}\n              defaultValue=''\n              disabled\n            />\n          </Grid>\n        }\n        <Text fontWeight='bold' padding={{ top: '1em', }}>Dados do estagiário</Text>\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}  >\n\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormInput\n              name='name'\n              label='Nome'\n              placeholder={''}\n              required\n              control={control}\n              errors={errors}\n              defaultValue=''\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='cpf'\n              label='CPF'\n              mask='cpf'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n          </Grid>\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormDatePicker\n              name='birthDate'\n              label='Data de nascimento'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='rg'\n              label='RG'\n              mask='rg'\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n          </Grid>\n        </Grid>\n\n        <hr style={{ marginTop: '2em' }} />\n\n        <Grid item xl={6} lg={6} md={6} sm={12} xs={12} >\n          <FormInput\n            name='cep'\n            label='CEP'\n            mask='cep'\n            required\n            control={control}\n            errors={errors}\n            getChangeValue={e => getCepChange(e)}\n            disabled={readOnlyFlag}\n          />\n        </Grid>\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormInput\n              name='street'\n              label='Rua'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='district'\n              label='Bairro'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormDropdown\n              placeholder='Pesquisa o estado...'\n              name='state'\n              label='Estado'\n              required\n              values={statesList}\n              control={control}\n              errors={errors}\n              getChangeValue={e => getCitiesByStateId(e)}\n              width='65%'\n              disabled={readOnlyFlag}\n            />\n          </Grid>\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormInput\n              name='number'\n              label='Número'\n              type='number'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='complement'\n              label='Complemento'\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            //maxLength\n            />\n            <FormDropdown\n              placeholder='Pesquisa a cidade...'\n              name='city'\n              label='Cidade'\n              required\n              control={control}\n              errors={errors}\n              values={citiesList}\n              width='65%'\n              disabled={readOnlyFlag}\n            />\n          </Grid>\n        </Grid>\n\n        <hr style={{ marginTop: '2em' }} />\n        <Text fontWeight='bold' padding={{ top: '1em', bottom: '2em' }}>Carga horária semanal (nº de horas)</Text>\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1} >\n          <FormInput\n            name='weekDay1'\n            label='Segunda-feira'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='weekDay2'\n            label='Terça-feira'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='weekDay3'\n            label='Quarta-feira'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='weekDay4'\n            label='Quinta-feira'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n        </Grid>\n\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1} style={{ paddingTop: '2em' }} >\n          <FormInput\n            name='weekDay5'\n            label='Sexta-feira'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='weekDay6'\n            label='Sábado'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='weekDay7'\n            label='Domingo'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            getChangeValue={getHourChange}\n            disabled={readOnlyFlag}\n          />\n          <FormInput\n            name='totalHoursCount'\n            label='Horas totais'\n            type='weekDay'\n            control={control}\n            errors={errors}\n            padding={{ right: '2em' }}\n            disabled\n            validate={{\n              lessThanValid: v => {\n                console.log(`Horas: ${v}`)\n                if (!v) return false\n                return (v && !isNaN(v) && parseFloat(v) >= 20)\n              },\n              moreThanValid: v => {\n                console.log(`Horas: ${v}, tipo: ${typeof v}, condicao1: ${!isNaN(v)}, condicao2: ${parseFloat(v) < 30}`)\n                return (v && !isNaN(v) && parseFloat(v) <= 30)\n              },\n            }}\n            defaultValue={0}\n          />\n        </Grid>\n\n        <hr style={{ marginTop: '2em' }} />\n        <Text fontWeight='bold' padding={{ top: '1em', bottom: '1em' }}>Informações sobre o contrato</Text>\n\n        <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}>\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormDropdown\n              placeholder='Pesquisa a escola...'\n              name='school'\n              label='Escola'\n              required\n              values={combos.schoolsList}\n              control={control}\n              errors={errors}\n              width='65%'\n              disabled={readOnlyFlag}\n            />\n            <FormDatePicker\n              name='startDate'\n              label='Data de início do contrato'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='insuranceCompany'\n              label='Empresa do Seguro'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='wage'\n              label='Valor da Bolsa (R$)'\n              type='text'\n              required\n              control={control}\n              errors={errors}\n              defaultValue={'0,00'}\n              changeValue={e => BRLCurrencyConverter(e.target.value)}\n              disabled={readOnlyFlag}\n            />\n            {editFlag &&\n              <FormDropdown\n                placeholder='Selecione um status...'\n                name='status'\n                label='Status'\n                required\n                values={statusLOV}\n                control={control}\n                errors={errors}\n                width='65%'\n                disabled\n              />\n            }\n          </Grid>\n          <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n            <FormDropdown\n              placeholder='Pesquisa a empresa...'\n              name='company'\n              label='Empresa'\n              required\n              values={combos.companiesList}\n              control={control}\n              errors={errors}\n              width='65%'\n              disabled={readOnlyFlag}\n            />\n            <FormDatePicker\n              name='endDate'\n              label='Data de término do contrato'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='policyNumber'\n              label='Código do seguro'\n              control={control}\n              errors={errors}\n              required\n              disabled={readOnlyFlag}\n            />\n            <FormInput\n              name='supervisorName'\n              label='Nome do supervisor'\n              required\n              control={control}\n              errors={errors}\n              disabled={readOnlyFlag}\n            />\n            {readOnlyFlag && editFlag && getValues('status') === 'revoked' &&\n              <FormDropdown\n                placeholder='Selecione um motivo...'\n                name='revocationReason'\n                label='Motivo da Revogação'\n                values={revocationReasonsList}\n                control={control}\n                errors={errors}\n                width='65%'\n                disabled\n              />\n            }\n          </Grid>\n        </Grid>\n\n        <FormSubmit\n          padding={{ top: '2em' }}\n          disabled={readOnlyFlag}\n          label={editFlag ? 'Alterar Contrato' : 'Gerar Contrato'}\n        />\n      </form>\n      {/* <form onSubmit={handleSubmit(onSubmit)}>\n                    <Text padding={{ top: '1em' }}>Dados do usuário</Text>\n                    <Row>\n\n                        <Col width='50%' padding={{ right: '4em' }}>\n\n                            <FormInput\n                                name='name'\n                                label='Nome'\n                                placeholder={''}\n                                required\n                                control={control}\n                                errors={errors}\n                                defaultValue=''\n                            />\n                            <FormInput\n                                name='cpf'\n                                label='CPF'\n                                mask='cpf'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                        </Col>\n                        <Col width='50%' >\n                            <FormDatePicker\n                                name='birthDate'\n                                label='Data de nascimento'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormInput\n                                name='rg'\n                                label='RG'\n                                mask='rg'\n                                control={control}\n                                errors={errors}\n                            />\n                        </Col>\n                        </Row>\n                    <hr style={{ marginTop: '2em' }} />\n                    <Text padding={{ top: '1em' }}>Dias da semana</Text>\n\n                   <Row padding={{ top: '1em' }} align={{ horizontal: 'flex-start', vertical: 'flex-start' }}>\n                        <FormInput\n                            name='weekDay1'\n                            label='Segunda-feira'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='weekDay2'\n                            label='Terça-feira'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='weekDay3'\n                            label='Quarta-feira'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='weekDay4'\n                            label='Quinta-feira'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                    </Row>\n                    <Row padding={{ top: '1em' }} align={{ horizontal: 'flex-start', vertical: 'flex-start' }}>\n                        <FormInput\n                            name='weekDay5'\n                            label='Sexta-feira'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='weekDay6'\n                            label='Sábado'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='weekDay7'\n                            label='Domingo'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            getChangeValue={getHourChange}\n                        />\n                        <FormInput\n                            name='totalHoursCount'\n                            label='Horas totais'\n                            type='weekDay'\n                            control={control}\n                            errors={errors}\n                            padding={{ right: '2em' }}\n                            disabled\n                            validate={{\n                                lessThanValid: v => {\n                                    console.log(`Horas: ${v}`)\n                                    if (!v) return false\n                                    return (v && !isNaN(v) && parseFloat(v) >= 20)\n                                },\n                                moreThanValid: v => {\n                                    console.log(`Horas: ${v}, tipo: ${typeof v}, condicao1: ${!isNaN(v)}, condicao2: ${parseFloat(v) < 30}`)\n                                    return (v && !isNaN(v) && parseFloat(v) <= 30)\n                                },\n                            }}\n                            defaultValue={0}\n                        />\n                    </Row>\n\n                    <hr style={{ marginTop: '2em' }} />\n                    <Text padding={{ top: '1em' }}>Endereço</Text>\n\n                    <Row>\n                        <Col width='50%' padding={{ right: '2em' }}>\n                            <FormDropdown\n                                placeholder='Pesquisa o estado...'\n                                name='state'\n                                label='Estado'\n                                required\n                                values={statesList}\n                                control={control}\n                                errors={errors}\n                                getChangeValue={e => getCitiesByStateId(e)}\n                            />\n                            <FormInput\n                                name='cep'\n                                label='CEP'\n                                mask='cep'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormInput\n                                name='street'\n                                label='Rua'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormInput\n                                name='district'\n                                label='Bairro'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                        </Col>\n                        <Col width='50%' padding={{ right: '2em' }}>\n                            <FormDropdown\n                                placeholder='Pesquisa a cidade...'\n                                name='city'\n                                label='Cidade'\n                                required\n                                control={control}\n                                errors={errors}\n                                values={citiesList}\n                            />\n                            <FormInput\n                                name='number'\n                                label='Número'\n                                type='number'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n\n                            <FormInput\n                                name='complement'\n                                label='Complemento'\n                                control={control}\n                                errors={errors}\n                            //maxLength\n                            />\n                        </Col>\n                    </Row>\n\n                    <hr style={{ marginTop: '2em' }} />\n\n                    <Row>\n                        <Col width='50%' padding={{ right: '2em' }}>\n                            <FormDropdown\n                                placeholder='Pesquisa a escola...'\n                                name='school'\n                                label='Escola'\n                                required\n                                values={combos.schoolsList}\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormDatePicker\n                                name='startDate'\n                                label='Data de início do contrato'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormInput\n                                name='insuranceCompany'\n                                label='Empresa do Seguro'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n\n                            <FormInput\n                                name='wage'\n                                label='Valor da Bolsa (R$)'\n                                type='text'\n                                required\n                                control={control}\n                                errors={errors}\n                                defaultValue={'0,00'}\n                                changeValue={e => BRLCurrencyConverter(e.target.value)}\n                            />\n                        </Col>\n                        <Col width='50%' padding={{ right: '2em' }}>\n                            <FormDropdown\n                                placeholder='Pesquisa a empresa...'\n                                name='company'\n                                label='Empresa'\n                                required\n                                values={combos.companiesList}\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormDatePicker\n                                name='endDate'\n                                label='Data de término do contrato'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                            <FormInput\n                                name='policyNumber'\n                                label='Código do seguro'\n                                control={control}\n                                errors={errors}\n                                required\n                            />\n                            <FormInput\n                                name='supervisorName'\n                                label='Nome do supervisor'\n                                required\n                                control={control}\n                                errors={errors}\n                            />\n                        </Col>\n                    </Row>\n                    <FormSubmit padding={{ top: '2em' }} />\n                </form> */}\n\n      {/* ------------------------------FORM TESTE------------------------------ */}\n\n\n      {/* <Col width='100%' align={{ horizontal: 'flex-start', vertical: 'center' }}>\n                <Text\n                    type='title'\n                    color={colors.darkGrey}\n                >\n                    Cadastro de Estágio\n                </Text>\n            </Col>\n            <DatePicker\n                label='AAAAAAAAAA'\n                value={startDate}\n                onChangeValue={(date) => setStartDate(date)}\n            />\n\n            <Form\n                onFormSubmit={onSubmit}\n            >\n                <Form.Input\n                    placeholder='Caio Cerano Silva'\n                    name='username'\n                    label='Nome'\n                    required\n                />\n                <Form.Input\n                    name='salary'\n                    label='Salário'\n                    type='currency'\n                    mask='salary'\n                    required\n                />\n                <Form.DatePicker\n                    name='birthDate'\n                    label='Data de nascimento'\n                    placeholder='12'\n                    required\n                />\n                <Form.DataArray\n                    name='semana'\n                    label='Horas por dias da semana'\n                    values={[\n                        {\n                            label: 'segunda-feira', name: 'segunda-feira',\n                        },\n                        {\n                            label: 'terca-feira', name: 'terca-feira'\n                        },\n                        {\n                            label: 'quarta-feira', name: 'quarta-feira'\n                        },\n                        {\n                            label: 'quinta-feira', name: 'quinta-feira'\n                        },\n                        {\n                            label: 'sexta-feira', name: 'sexta-feira'\n                        },\n                    ]}\n                />\n                <Form.Input\n                    name='cpf'\n                    label='CPF'\n                    mask='cpf'\n                    required\n                />\n                <Form.Input\n                    name='rg'\n                    label='RG'\n                    mask='rg'\n                />\n                <Form.DatePicker\n                    name='birthDate'\n                    label='Data de nascimento'\n                    placeholder='12'\n                    required\n                />\n                <Form.Input\n                    name='cep'\n                    label='CEP'\n                    mask='cep'\n                    required\n                />\n                <Form.Input\n                    name='street'\n                    label='Rua'\n                    required\n                />\n                <Form.Input\n                    name='number'\n                    label='Número'\n                    type='number'\n                    required\n                />\n                <Form.Input\n                    name='complement'\n                    label='Complemento'\n                //maxLength\n                />\n                <Form.Input\n                    name='district'\n                    label='Bairro'\n                    required\n                />\n                <Form.Dropdown\n                    placeholder='Pesquisa a cidade...'\n                    name='city'\n                    label='Cidade'\n                    required\n                    values={[\n                        { value: '1', label: 'Sao Paulo' },\n                        { value: '2', label: 'Maua city' },\n                    ]}\n                />\n                <Form.Dropdown\n                    placeholder='Pesquisa o estado...'\n                    name='state'\n                    label='Estado'\n                    required\n                    values={[\n                        { value: '1', label: 'Sao Paulo' },\n                    ]}\n                />\n                <Form.Dropdown\n                    placeholder='Pesquisa a escola...'\n                    name='school'\n                    label='Escola'\n                    required\n                    values={[\n                        { value: '1', label: 'FUFABC' },\n                    ]}\n                />\n                <Form.Dropdown\n                    placeholder='Pesquisa a empresa...'\n                    name='company'\n                    label='Empresa'\n                    required\n                    values={[\n                        { value: '1', label: 'FUFABC' },\n                    ]}\n                />\n                <Form.DatePicker\n                    name='startDate'\n                    label='Data de início do contrato'\n                    required\n                />\n                <Form.DatePicker\n                    name='endDate'\n                    label='Data de término do contrato'\n                    required\n                />\n                <Form.Input\n                    name='salary'\n                    label='Salário'\n                    type='number'\n                    // mask='salary'\n                    required\n                />\n                <Form.Input\n                    name='supervisorName'\n                    label='Nome do supervisor'\n                    required\n                />\n                <Form.Input\n                    name='insurance'\n                    label='Seguro'\n                    required\n                />\n                <Form.Input\n                    name='insuranceNumber'\n                    label='Número do seguro'\n                    // type='number'\n                    required\n                />\n\n                <Form.Submit\n                    name='submit'\n                />\n            </Form> */}\n    </PageView>\n  )\n}\n\nexport default ContratoNovo\n","import React from \"react\"\r\nimport { Switch } from \"react-router-dom\"\r\n\r\nimport DefaultRoute from \"routes/defaultRoute\"\r\n\r\nimport Contrato from \"pages/private/estagio/contrato\"\r\nimport ContratoForm from \"pages/private/estagio/contrato/novo\"\r\n\r\nconst ContratoRoutes = ({match}) => {\r\n  const PARENT_PATH = match.url || \"\"\r\n  return (\r\n    <Switch>\r\n      <DefaultRoute exact path={PARENT_PATH} component={Contrato} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/novo\"} component={ContratoForm} />\r\n      <DefaultRoute exact path={PARENT_PATH + \"/:contractId\"} component={ContratoForm} />\r\n      <DefaultRoute />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default ContratoRoutes","import React from \"react\"\nimport { Switch } from \"react-router-dom\"\n\nimport DefaultRoute from \"routes/defaultRoute\"\nimport ContratoRoutes from \"routes/private/estagio/contratoRoutes\"\n\nimport generateRoutePath from \"utils/generateRoutePath\"\n\nconst EstagioRoutesGroup = ({match}) => {\n  const PARENT_PATH = match.url || \"\"\n  const routes = generateRoutePath([\"contratos\", \"rescisao\"])\n  return (\n    <Switch>\n      <DefaultRoute path={PARENT_PATH + routes.contratos} component={ContratoRoutes} />\n      <DefaultRoute />\n    </Switch>\n  )\n}\n\nexport default EstagioRoutesGroup\n","import { Row } from 'components/common/layout/LayoutStyle'\r\nimport { Button, Col, FormInput, FormSubmit, PageView, Text } from 'components/YeyComponents'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { signIn } from 'redux/actions/auth'\r\nimport FuturoAbsolutoLogoBlack from 'assets/images/futuroAbsolutoBlack.png'\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { handleSubmit, control, formState: { errors } } = useForm()\r\n    const onSubmit = data => dispatch(signIn(data?.username, data?.password, history))\r\n\r\n    return (\r\n        <PageView backgroundColor='black'>\r\n            <Row flexDirection=\"column\" align={{ vertical: 'center', horizontal: 'center' }} width='100%' height='100%'>\r\n                <Col padding={{ bottom: '1rem' }}>\r\n                    <img src={FuturoAbsolutoLogoBlack} alt=\"Logo Futuro Absoluto\" width='250' />\r\n                </Col>\r\n                <Col>\r\n                    <form className=\"form\" onSubmit={handleSubmit(onSubmit)} style={{ border: '1px solid black', borderRadius: '1rem', padding: '2rem', backgroundColor: 'white' }}>\r\n                        <Text type='title'>Login</Text>\r\n                        <Row>\r\n                            <Col width='100%'>\r\n                                <FormInput\r\n                                    name='username'\r\n                                    label='Nome de usuário'\r\n                                    required\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    width='30em'\r\n                                />\r\n                                <FormInput\r\n                                    type='password'\r\n                                    name='password'\r\n                                    label='Senha'\r\n                                    required\r\n                                    control={control}\r\n                                    errors={errors}\r\n                                    width='30em'\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col width='100%'>\r\n                                <FormSubmit label=\"Entrar\" padding={{ top: '2em' }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </form>\r\n                </Col>\r\n                <Col padding={{ top: '2rem' }}>\r\n                    <p style={{ color: 'white' }}>SECE - Sistema de Emissão de Contratos de Estágio</p>\r\n                </Col>\r\n            </Row>\r\n        </PageView>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import toast from \"react-hot-toast\"\nimport errorHandler from \"utils/errorHandler\"\n\nconst { default: DASHBOARD_TYPES } = require(\"redux/types/dashboard\")\nconst { default: api } = require(\"services/api\")\n\nconst countContractsForDashboard = () => {\n  return dispatch => {\n    api.get(\"counts\").then(response => {\n      dispatch({\n        type: DASHBOARD_TYPES.COUNT,\n        data: response.data\n      })\n    }).catch(err => toast.error(errorHandler(err)))\n  }\n}\n\nexport {countContractsForDashboard}\n","const addDaysAndFormatDate = () => {\n  const date = new Date()\n  const dateAdded = date.setDate(new Date().getDate() + 30)\n  return new Date(dateAdded).toLocaleDateString('fr-CA') // yyyy-mm-dd\n}\n\nexport default addDaysAndFormatDate\n","import { Button, Card, CardContent, Grid, Typography } from \"@material-ui/core\"\r\nimport { PageView, Text } from \"components/YeyComponents\"\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { countContractsForDashboard } from \"redux/actions/dashboard\"\r\nimport addDaysAndFormatDate from \"utils/addDaysAndFormatDate\"\r\nimport Chart from 'react-apexcharts'\r\n\r\nconst DashboardChart = ({data}) => {\r\n  const chartOptions = {\r\n    chart: {\r\n      type: 'donut',\r\n      width: 1000,\r\n      offsetX: 20\r\n    },\r\n    labels: ['Ativos', 'Aguardando Assinatura', 'Próximos do Vencimento'],\r\n    responsive: [{\r\n      breakpoint: 1200,\r\n      options: {\r\n        chart: {\r\n          width: 500,\r\n          offsetX: 60\r\n        },\r\n        legend: {\r\n          position: 'bottom',\r\n          offsetX: 0,\r\n          fontSize: '15px',\r\n          markers: {\r\n            offsetX: 0,\r\n            offsetY: 0\r\n          },\r\n        }\r\n      }\r\n    }],\r\n    legend: {\r\n      position: 'right',\r\n      horizontalAlign: 'left',\r\n      fontSize: '20px',\r\n      offsetX: -40,\r\n      markers: {\r\n        offsetX: -10,\r\n        offsetY: 0\r\n      },\r\n    }\r\n  }\r\n  const [chartSeries, setChartSeries] = useState(Object.values(data).map(v => v))\r\n\r\n  useEffect(() => {\r\n    if(data && typeof data === 'object') {\r\n      setChartSeries(Object.values(data).map(v => v))\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <Chart options={chartOptions} series={chartSeries} type=\"donut\" width=\"800\"/>\r\n  )\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const contracts = useSelector(state => state?.dashboard?.contracts)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  useEffect(() => dispatch(countContractsForDashboard()), [dispatch])\r\n\r\n  return (\r\n    <PageView>\r\n      <Text type='title' padding={{ top: '1em' }}>Dashboard</Text>\r\n      <hr style={{ marginTop: '2em' }} />\r\n      <Text type='label' padding={{ top: '1em' }}>Situação dos Contratos</Text>\r\n      <br />\r\n      <Grid container spacing={3} alignItems=\"center\" justify=\"center\">\r\n        <Grid item xl={4} lg={4} md={12} sm={12} xs={12}>\r\n          <Card className=\"root\" variant=\"outlined\" style={{textAlign: 'center', width: '100%'}}>\r\n            <CardContent>\r\n              <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                Ativos\r\n              </Typography>\r\n              <Typography variant=\"h3\" component=\"h2\">\r\n              {contracts?.active}\r\n              </Typography>\r\n              <Button size=\"small\" onClick={() => history.push({pathname: '/menu/estagio/contratos', state: {defaultStatusValue: 'active'}})}>Ver contratos</Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xl={4} lg={4} md={12} sm={12} xs={12}>\r\n          <Card className=\"root\" variant=\"outlined\" style={{textAlign: 'center', width: '100%'}}>\r\n            <CardContent>\r\n              <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                Aguardando Assinatura\r\n              </Typography>\r\n              <Typography variant=\"h3\" component=\"h2\">\r\n              {contracts?.awaitingSignature}\r\n              </Typography>\r\n              <Button size=\"small\" onClick={() => history.push({pathname: '/menu/estagio/contratos', state: {defaultStatusValue: 'awaiting_signature'}})}>Ver contratos</Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xl={4} lg={4} md={12} sm={12} xs={12}>\r\n          <Card className=\"root\" variant=\"outlined\" style={{textAlign: 'center', width: '100%'}}>\r\n            <CardContent>\r\n              <Typography className=\"title\" color=\"textSecondary\" gutterBottom>\r\n                Próximos a Vencer (30 dias)\r\n              </Typography>\r\n              <Typography variant=\"h3\" component=\"h2\">\r\n              {contracts?.closeExpire}\r\n              </Typography>\r\n              <Button size=\"small\" onClick={() => history.push({pathname: '/menu/estagio/contratos', state: {defaultStatusValue: 'active', defaultEndDateValue: addDaysAndFormatDate()}})}>Ver contratos</Button>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xl={8} lg={9} md={12} sm={12} xs={12}>\r\n          <Card className=\"root\" variant=\"outlined\" style={{ width: '100%'}}>\r\n            <CardContent>\r\n              <DashboardChart data={contracts}/>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </PageView>\r\n  )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser } from 'redux/actions/user'\nimport { Col, FormInput, FormSubmit, PageView, Row, Text } from 'components/YeyComponents'\nimport { Grid, } from \"@material-ui/core\"\n\nconst Usuario = () => {\n\n    const dispatch = useDispatch()\n    const userData = useSelector(state => state.auth)\n    const { handleSubmit, control, formState: { errors } } = useForm()\n    const password = useRef('')\n\n    const onSubmit = data => {\n        let payload = {\n            id: userData.id,\n            name: data.name,\n            email: data.email\n        }\n        if (data?.password?.length > 0 && data?.password === data?.passwordConf) {\n            payload.password = data.password\n        }\n        dispatch(updateUser(payload))\n    }\n\n    return (\n        <PageView>\n            <Text type='title' padding={{ top: '1em' }}>Meus Dados</Text>\n            <hr style={{ marginTop: '2em' }} />\n\n            <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n                <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"flex-start\" spacing={1}  >\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <Text padding={{ top: '1em' }} fontWeight=\"bold\">Dados de usuário</Text>\n                        <FormInput\n                            name='username'\n                            label='Nome de usuário'\n                            disabled\n                            control={control}\n                            errors={errors}\n                            defaultValue={userData.username}\n                        />\n                        <FormInput\n                            name='name'\n                            label='Nome'\n                            required\n                            control={control}\n                            errors={errors}\n                            defaultValue={userData.name}\n                        />\n                        <FormInput\n                            name='email'\n                            label='E-mail'\n                            required\n                            control={control}\n                            errors={errors}\n                            defaultValue={userData.email}\n                        />\n                    </Grid>\n                    <Grid item xl={6} lg={6} md={6} sm={12} xs={12} direction=\"column\" >\n                        <Text padding={{ top: '1em' }} fontWeight=\"bold\">Alterar senha</Text>\n                        <FormInput\n                            type='password'\n                            name='password'\n                            label='Nova Senha'\n                            getChangeValue={(newValue) => password.current = newValue}\n                            control={control}\n                            errors={errors}\n                        />\n                        <FormInput\n                            type='password'\n                            name='passwordConf'\n                            label='Confirmar Nova Senha'\n                            control={control}\n                            errors={errors}\n                            validate={{\n                              passwordMatch: v => {\n                                if(!v) return true\n                                return (v && v === password.current)\n                              },\n                          }}\n                        />\n                        <FormSubmit label=\"Salvar\" padding={{ top: '2em' }} />\n                    </Grid>\n                </Grid>\n            </form>\n        </PageView>\n    )\n}\n\nexport default Usuario\n","/*\n  Sistema de roteamento com agrupamento de rotas\n\n  As rotas são divididas, inicialmente, entre públicas e privadas.\n  Estas podem ter outras subdivisões de acordo com cada contexto.\n  Ex.: a rota /cadastro é privada e possui sub-rotas (/empresa e /escola).\n  Ex.: a rota /login é pública e não possui sub-rotas.\n\n  A ordem de listagem é importante. Não alterar, especialmente no componente que é exportado para o App\n*/\n\nimport React from \"react\"\nimport {Redirect, Route, Switch} from \"react-router-dom\"\n\nimport DefaultRoute from \"routes/defaultRoute\"\nimport CadastroRoutesGroup from \"routes/groups/cadastroRoutesGroup\"\nimport EstagioRoutesGroup from \"routes/groups/estagioRoutesGroup\"\n\nimport Login from \"pages/public/login\"\nimport Dashboard from \"pages/private/dashboard\"\n\nimport generateRoutePath from \"utils/generateRoutePath\"\nimport { Sidebar } from \"components/YeyComponents\"\nimport Usuario from \"pages/private/usuario\"\n\nconst PrivateRoutesGroup = ({ match }) => {\n  const PARENT_PATH = match.url || \"\"\n  const routes = generateRoutePath([\"dashboard\", \"usuario\", \"cadastro\", \"estagio\"])\n  return (\n    <>\n    <Sidebar />\n    <Switch>\n      <DefaultRoute exact path={PARENT_PATH + routes.dashboard} component={Dashboard} />\n      <DefaultRoute exact path={PARENT_PATH + routes.usuario} component={Usuario} />\n      <DefaultRoute path={PARENT_PATH + routes.cadastro} component={CadastroRoutesGroup} />\n      <DefaultRoute path={PARENT_PATH + routes.estagio} component={EstagioRoutesGroup} />\n      <DefaultRoute />\n    </Switch>\n    </>\n  )\n}\n\nconst PublicRoutesGroup = () => {\n  const routes = generateRoutePath([\"login\"])\n  return (\n    <Switch>\n      <Route exact path=\"/\"><Redirect to=\"/login\" /></Route>\n      <DefaultRoute exact path={routes.login} component={Login} isLogin={true} />\n      <DefaultRoute />\n    </Switch>\n  )\n}\n\nconst Routes = () => (\n  <Switch>\n    <DefaultRoute path=\"/menu\" component={PrivateRoutesGroup} isPrivate redirectURI=\"/login\" />\n    <DefaultRoute path=\"/\" component={PublicRoutesGroup} />\n    <DefaultRoute />\n  </Switch>\n)\n\nexport default Routes\n","import \"./App.css\"\r\nimport Routes from \"routes\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from 'redux/store'\r\nimport { createBrowserHistory } from \"history\"\r\nimport { setupInterceptors } from \"services/api\"\r\nimport { Router } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport { MainView } from \"utils/StyleUtils\"\r\nimport { ChakraProvider } from \"@chakra-ui/react\"\r\nimport toast, { Toaster, ToastBar } from \"react-hot-toast\"\r\n\r\nconst history = createBrowserHistory()\r\nsetupInterceptors(store, history)\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", () => {\r\n            console.log('resize')\r\n            // if (window.innerWidth <= 767) {\r\n            //     setIsNavOpen(false)\r\n            // }\r\n            // else if (window.innerWidth >= 767) {\r\n            //     setIsNavOpen(true)\r\n            // }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Router history={history}>\r\n                <MainView>\r\n                    <ChakraProvider>\r\n                        <Routes />\r\n                        <Toaster>\r\n                            {(t) => (\r\n                                <ToastBar toast={t}>\r\n                                    {({ icon, message }) => (\r\n                                        <>\r\n                                            {icon}\r\n                                            {message}\r\n                                            {t.type !== 'loading' && (\r\n                                                <button onClick={() => toast.dismiss(t.id)}>X</button>\r\n                                            )}\r\n                                        </>\r\n                                    )}\r\n                                </ToastBar>\r\n                            )}\r\n                        </Toaster>\r\n                    </ChakraProvider>\r\n                </MainView>\r\n            </Router>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n","import axios from \"axios\"\nimport { getToken } from './token'\nimport AUTH_TYPES from \"redux/types/auth\"\nimport errorHandler from \"utils/errorHandler\"\nimport { toast } from \"react-hot-toast\"\n\nconst URL = {\n  localhost: `http://localhost:3001/v1`,\n  digitalOcean: `http://159.203.191.251:3001/v1`,\n  gitPod: `https://3001-tan-grouse-vz7xz3hm.ws-us16.gitpod.io/v1`,\n  heroku: `https://futuro-absoluto-dev-api.herokuapp.com/v1`\n}\n\nconst api = axios.create({\n  baseURL: URL.digitalOcean\n})\n\nexport const setupInterceptors = (store, history) => {\n    api.interceptors.request.use(config => {\n        const token = getToken()\n        if (token) config.headers.Authorization = `Bearer ${token}`\n        config.timeout = 20000\n        config.timeoutErrorMessage = `O servidor demorou muito para responder. Tente novamente ou contate o suporte.`\n        return config\n    }, error => Promise.reject(error))\n\n    api.interceptors.response.use(response => {\n        return response\n    }, error => {\n        if (error.response.status === 401) {\n            if (window.location.pathname !== `/login`) {\n                store.dispatch({ type: AUTH_TYPES.LOGOUT })\n                localStorage.clear()\n                toast.error(errorHandler(error, true))\n                history.push(\"/login\")\n            }\n        }\n        return Promise.reject(error)\n    })\n}\n\nexport default api\n","const PREFIX = \"DASHBOARD\"\nconst DASHBOARD_TYPES = {\n  COUNT: `${PREFIX}/COUNT`\n}\n\nexport default DASHBOARD_TYPES\n","const errorHandler = (error, expired = false) => {\n    const errorObj = {\n      400: () => `O formato dos campos pode estar incorreto. Tente novamente ou contate a equipe de suporte.`,\n      401: () => expired ? `Acesso expirado. ` : `Usuário e/ou senha incorretos. Se você esqueceu sua senha, entre em contato com o suporte para solicitar nova senha. `,\n      403: () => `Você não possui permissão para acessar este recurso. `,\n      404: () => `Recurso não encontrado. `,\n      500: () => `Erro interno do servidor/API. Tente novamente ou contate a equipe de suporte. `,\n      unhandledCode: (httpCode, details) => `Código HTTP: ${httpCode}. ${details ? 'Detalhes: ' + details : ''}`,\n      default: () => `Ocorreu um erro desconhecido. Entre em contato com a equipe de suporte. `\n    }\n    if(error && error.response) {\n      if(errorObj[error.response.status]) {\n        return errorObj[error.response.status]()\n      } else {\n        return errorObj.unhandledCode(error.response.status, error.response?.data?.message)\n      }\n    } else {\n      return errorObj.default()\n    }\n  }\n\n  export default errorHandler\n"],"sourceRoot":""}